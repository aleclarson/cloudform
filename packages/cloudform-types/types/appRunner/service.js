"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const resource_1=require("../resource");class ImageConfiguration{constructor(properties){Object.assign(this,properties)}}exports.ImageConfiguration=ImageConfiguration;class InstanceConfiguration{constructor(properties){Object.assign(this,properties)}}exports.InstanceConfiguration=InstanceConfiguration;class AuthenticationConfiguration{constructor(properties){Object.assign(this,properties)}}exports.AuthenticationConfiguration=AuthenticationConfiguration;class KeyValuePair{constructor(properties){Object.assign(this,properties)}}exports.KeyValuePair=KeyValuePair;class EncryptionConfiguration{constructor(properties){Object.assign(this,properties)}}exports.EncryptionConfiguration=EncryptionConfiguration;class HealthCheckConfiguration{constructor(properties){Object.assign(this,properties)}}exports.HealthCheckConfiguration=HealthCheckConfiguration;class CodeConfigurationValues{constructor(properties){Object.assign(this,properties)}}exports.CodeConfigurationValues=CodeConfigurationValues;class SourceCodeVersion{constructor(properties){Object.assign(this,properties)}}exports.SourceCodeVersion=SourceCodeVersion;class ImageRepository{constructor(properties){Object.assign(this,properties)}}exports.ImageRepository=ImageRepository;class SourceConfiguration{constructor(properties){Object.assign(this,properties)}}exports.SourceConfiguration=SourceConfiguration;class CodeRepository{constructor(properties){Object.assign(this,properties)}}exports.CodeRepository=CodeRepository;class CodeConfiguration{constructor(properties){Object.assign(this,properties)}}exports.CodeConfiguration=CodeConfiguration;class Service extends resource_1.ResourceBase{constructor(properties){super("AWS::AppRunner::Service",properties)}}(exports.default=Service).ImageConfiguration=ImageConfiguration,Service.InstanceConfiguration=InstanceConfiguration,Service.AuthenticationConfiguration=AuthenticationConfiguration,Service.KeyValuePair=KeyValuePair,Service.EncryptionConfiguration=EncryptionConfiguration,Service.HealthCheckConfiguration=HealthCheckConfiguration,Service.CodeConfigurationValues=CodeConfigurationValues,Service.SourceCodeVersion=SourceCodeVersion,Service.ImageRepository=ImageRepository,Service.SourceConfiguration=SourceConfiguration,Service.CodeRepository=CodeRepository,Service.CodeConfiguration=CodeConfiguration,Object.defineProperty(exports,"__esModule",{value:!0});const resource_1=require("../resource");class ServiceAccountCredentials{constructor(properties){Object.assign(this,properties)}}exports.ServiceAccountCredentials=ServiceAccountCredentials;class DirectoryConfig extends resource_1.ResourceBase{constructor(properties){super("AWS::AppStream::DirectoryConfig",properties)}}(exports.default=DirectoryConfig).ServiceAccountCredentials=ServiceAccountCredentials;