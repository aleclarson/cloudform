"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.R=exports.LogicalTableSource=exports.CastColumnTypeOperation=exports.CalculatedColumn=exports.IngestionWaitPolicy=exports.TagColumnOperation=exports.ColumnTag=exports.OutputColumn=exports.JoinInstruction=exports.TransformOperation=exports.LogicalTable=exports.S3Source=exports.FieldFolder=exports.ResourcePermission=exports.CustomSql=exports.FilterOperation=exports.RowLevelPermissionDataSet=exports.InputColumn=exports.RelationalTable=exports.GeoSpatialColumnGroup=exports.ColumnGroup=exports.RenameColumnOperation=exports.ColumnDescription=exports.PhysicalTable=exports.CreateColumnsOperation=exports.ColumnLevelPermissionRule=exports.ProjectOperation=exports.UploadSettings=exports.JoinKeyProperties=void 0;const resource_1=require("../resource");class JoinKeyProperties{constructor(properties){Object.assign(this,properties)}}exports.JoinKeyProperties=JoinKeyProperties;class UploadSettings{constructor(properties){Object.assign(this,properties)}}exports.UploadSettings=UploadSettings;class ProjectOperation{constructor(properties){Object.assign(this,properties)}}exports.ProjectOperation=ProjectOperation;class ColumnLevelPermissionRule{constructor(properties){Object.assign(this,properties)}}exports.ColumnLevelPermissionRule=ColumnLevelPermissionRule;class CreateColumnsOperation{constructor(properties){Object.assign(this,properties)}}exports.CreateColumnsOperation=CreateColumnsOperation;class PhysicalTable{constructor(properties){Object.assign(this,properties)}}exports.PhysicalTable=PhysicalTable;class ColumnDescription{constructor(properties){Object.assign(this,properties)}}exports.ColumnDescription=ColumnDescription;class RenameColumnOperation{constructor(properties){Object.assign(this,properties)}}exports.RenameColumnOperation=RenameColumnOperation;class ColumnGroup{constructor(properties){Object.assign(this,properties)}}exports.ColumnGroup=ColumnGroup;class GeoSpatialColumnGroup{constructor(properties){Object.assign(this,properties)}}exports.GeoSpatialColumnGroup=GeoSpatialColumnGroup;class RelationalTable{constructor(properties){Object.assign(this,properties)}}exports.RelationalTable=RelationalTable;class InputColumn{constructor(properties){Object.assign(this,properties)}}exports.InputColumn=InputColumn;class RowLevelPermissionDataSet{constructor(properties){Object.assign(this,properties)}}exports.RowLevelPermissionDataSet=RowLevelPermissionDataSet;class FilterOperation{constructor(properties){Object.assign(this,properties)}}exports.FilterOperation=FilterOperation;class CustomSql{constructor(properties){Object.assign(this,properties)}}exports.CustomSql=CustomSql;class ResourcePermission{constructor(properties){Object.assign(this,properties)}}exports.ResourcePermission=ResourcePermission;class FieldFolder{constructor(properties){Object.assign(this,properties)}}exports.FieldFolder=FieldFolder;class S3Source{constructor(properties){Object.assign(this,properties)}}exports.S3Source=S3Source;class LogicalTable{constructor(properties){Object.assign(this,properties)}}exports.LogicalTable=LogicalTable;class TransformOperation{constructor(properties){Object.assign(this,properties)}}exports.TransformOperation=TransformOperation;class JoinInstruction{constructor(properties){Object.assign(this,properties)}}exports.JoinInstruction=JoinInstruction;class OutputColumn{constructor(properties){Object.assign(this,properties)}}exports.OutputColumn=OutputColumn;class ColumnTag{constructor(properties){Object.assign(this,properties)}}exports.ColumnTag=ColumnTag;class TagColumnOperation{constructor(properties){Object.assign(this,properties)}}exports.TagColumnOperation=TagColumnOperation;class IngestionWaitPolicy{constructor(properties){Object.assign(this,properties)}}exports.IngestionWaitPolicy=IngestionWaitPolicy;class CalculatedColumn{constructor(properties){Object.assign(this,properties)}}exports.CalculatedColumn=CalculatedColumn;class CastColumnTypeOperation{constructor(properties){Object.assign(this,properties)}}exports.CastColumnTypeOperation=CastColumnTypeOperation;class LogicalTableSource{constructor(properties){Object.assign(this,properties)}}exports.LogicalTableSource=LogicalTableSource;class DataSet extends resource_1.ResourceBase{constructor(properties){super("AWS::QuickSight::DataSet",properties||{})}}(exports.R=DataSet).JoinKeyProperties=JoinKeyProperties,DataSet.UploadSettings=UploadSettings,DataSet.ProjectOperation=ProjectOperation,DataSet.ColumnLevelPermissionRule=ColumnLevelPermissionRule,DataSet.CreateColumnsOperation=CreateColumnsOperation,DataSet.PhysicalTable=PhysicalTable,DataSet.ColumnDescription=ColumnDescription,DataSet.RenameColumnOperation=RenameColumnOperation,DataSet.ColumnGroup=ColumnGroup,DataSet.GeoSpatialColumnGroup=GeoSpatialColumnGroup,DataSet.RelationalTable=RelationalTable,DataSet.InputColumn=InputColumn,DataSet.RowLevelPermissionDataSet=RowLevelPermissionDataSet,DataSet.FilterOperation=FilterOperation,DataSet.CustomSql=CustomSql,DataSet.ResourcePermission=ResourcePermission,DataSet.FieldFolder=FieldFolder,DataSet.S3Source=S3Source,DataSet.LogicalTable=LogicalTable,DataSet.TransformOperation=TransformOperation,DataSet.JoinInstruction=JoinInstruction,DataSet.OutputColumn=OutputColumn,DataSet.ColumnTag=ColumnTag,DataSet.TagColumnOperation=TagColumnOperation,DataSet.IngestionWaitPolicy=IngestionWaitPolicy,DataSet.CalculatedColumn=CalculatedColumn,DataSet.CastColumnTypeOperation=CastColumnTypeOperation,DataSet.LogicalTableSource=LogicalTableSource;