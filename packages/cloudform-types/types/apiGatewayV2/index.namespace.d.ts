import*as _0 from'./api';import*as _1 from'./routeResponse';import*as _2 from'./domainName';import*as _3 from'./integration';import*as _4 from'./deployment';import*as _5 from'./model';import*as _6 from'./integrationResponse';import*as _7 from'./route';import*as _8 from'./apiGatewayManagedOverrides';import*as _9 from'./stage';import*as _a from'./vpcLink';import*as _b from'./authorizer';import*as _c from'./apiMapping';export declare namespace ApiGatewayV2{const Api:typeof _0.R;const RouteResponse:typeof _1.R;const DomainName:typeof _2.R;const Integration:typeof _3.R;const Deployment:typeof _4.R;const Model:typeof _5.R;const IntegrationResponse:typeof _6.R;const Route:typeof _7.R;const ApiGatewayManagedOverrides:typeof _8.R;const Stage:typeof _9.R;const VpcLink:typeof _a.R;const Authorizer:typeof _b.R;const ApiMapping:typeof _c.R;type Api=_0.R;type RouteResponse=_1.R;type DomainName=_2.R;type Integration=_3.R;type Deployment=_4.R;type Model=_5.R;type IntegrationResponse=_6.R;type Route=_7.R;type ApiGatewayManagedOverrides=_8.R;type Stage=_9.R;type VpcLink=_a.R;type Authorizer=_b.R;type ApiMapping=_c.R;namespace Api{type Cors=_0.Cors;type BodyS3Location=_0.BodyS3Location;}namespace RouteResponse{type ParameterConstraints=_1.ParameterConstraints;}namespace DomainName{type MutualTlsAuthentication=_2.MutualTlsAuthentication;type DomainNameConfiguration=_2.DomainNameConfiguration;}namespace Integration{type ResponseParameterList=_3.ResponseParameterList;type TlsConfig=_3.TlsConfig;type ResponseParameter=_3.ResponseParameter;}namespace Route{type ParameterConstraints=_7.ParameterConstraints;}namespace ApiGatewayManagedOverrides{type AccessLogSettings=_8.AccessLogSettings;type RouteOverrides=_8.RouteOverrides;type StageOverrides=_8.StageOverrides;type RouteSettings=_8.RouteSettings;type IntegrationOverrides=_8.IntegrationOverrides;}namespace Stage{type AccessLogSettings=_9.AccessLogSettings;type RouteSettings=_9.RouteSettings;}namespace Authorizer{type JWTConfiguration=_b.JWTConfiguration;}}