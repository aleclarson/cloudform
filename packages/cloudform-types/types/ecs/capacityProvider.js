"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const resource_1=require("../resource");class AutoScalingGroupProvider{constructor(properties){Object.assign(this,properties)}}exports.AutoScalingGroupProvider=AutoScalingGroupProvider;class ManagedScaling{constructor(properties){Object.assign(this,properties)}}exports.ManagedScaling=ManagedScaling;class CapacityProvider extends resource_1.ResourceBase{constructor(properties){super("AWS::ECS::CapacityProvider",properties)}}(exports.default=CapacityProvider).AutoScalingGroupProvider=AutoScalingGroupProvider,CapacityProvider.ManagedScaling=ManagedScaling,Object.defineProperty(exports,"__esModule",{value:!0});const resource_1=require("../resource");class ClusterSettings{constructor(properties){Object.assign(this,properties)}}exports.ClusterSettings=ClusterSettings;class ExecuteCommandLogConfiguration{constructor(properties){Object.assign(this,properties)}}exports.ExecuteCommandLogConfiguration=ExecuteCommandLogConfiguration;class ExecuteCommandConfiguration{constructor(properties){Object.assign(this,properties)}}exports.ExecuteCommandConfiguration=ExecuteCommandConfiguration;class ClusterConfiguration{constructor(properties){Object.assign(this,properties)}}exports.ClusterConfiguration=ClusterConfiguration;class CapacityProviderStrategyItem{constructor(properties){Object.assign(this,properties)}}exports.CapacityProviderStrategyItem=CapacityProviderStrategyItem;class Cluster extends resource_1.ResourceBase{constructor(properties){super("AWS::ECS::Cluster",properties||{})}}(exports.default=Cluster).ClusterSettings=ClusterSettings,Cluster.ExecuteCommandLogConfiguration=ExecuteCommandLogConfiguration,Cluster.ExecuteCommandConfiguration=ExecuteCommandConfiguration,Cluster.ClusterConfiguration=ClusterConfiguration,Cluster.CapacityProviderStrategyItem=CapacityProviderStrategyItem;