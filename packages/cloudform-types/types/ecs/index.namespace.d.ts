import*as _0 from'./cluster';import*as _1 from'./service';import*as _2 from'./clusterCapacityProviderAssociations';import*as _3 from'./taskDefinition';import*as _4 from'./capacityProvider';import*as _5 from'./primaryTaskSet';import*as _6 from'./taskSet';export declare namespace ECS{const Cluster:typeof _0.R;const Service:typeof _1.R;const ClusterCapacityProviderAssociations:typeof _2.R;const TaskDefinition:typeof _3.R;const CapacityProvider:typeof _4.R;const PrimaryTaskSet:typeof _5.R;const TaskSet:typeof _6.R;type Cluster=_0.R;type Service=_1.R;type ClusterCapacityProviderAssociations=_2.R;type TaskDefinition=_3.R;type CapacityProvider=_4.R;type PrimaryTaskSet=_5.R;type TaskSet=_6.R;namespace Cluster{type ClusterSettings=_0.ClusterSettings;type ExecuteCommandLogConfiguration=_0.ExecuteCommandLogConfiguration;type ExecuteCommandConfiguration=_0.ExecuteCommandConfiguration;type ClusterConfiguration=_0.ClusterConfiguration;type CapacityProviderStrategyItem=_0.CapacityProviderStrategyItem;}namespace Service{type PlacementStrategy=_1.PlacementStrategy;type DeploymentController=_1.DeploymentController;type PlacementConstraint=_1.PlacementConstraint;type LoadBalancer=_1.LoadBalancer;type DeploymentConfiguration=_1.DeploymentConfiguration;type AwsVpcConfiguration=_1.AwsVpcConfiguration;type NetworkConfiguration=_1.NetworkConfiguration;type CapacityProviderStrategyItem=_1.CapacityProviderStrategyItem;type DeploymentCircuitBreaker=_1.DeploymentCircuitBreaker;type ServiceRegistry=_1.ServiceRegistry;}namespace ClusterCapacityProviderAssociations{type CapacityProviderStrategy=_2.CapacityProviderStrategy;}namespace TaskDefinition{type LogConfiguration=_3.LogConfiguration;type FirelensConfiguration=_3.FirelensConfiguration;type Device=_3.Device;type EFSVolumeConfiguration=_3.EFSVolumeConfiguration;type SystemControl=_3.SystemControl;type EphemeralStorage=_3.EphemeralStorage;type ResourceRequirement=_3.ResourceRequirement;type DockerVolumeConfiguration=_3.DockerVolumeConfiguration;type AuthorizationConfig=_3.AuthorizationConfig;type MountPoint=_3.MountPoint;type KernelCapabilities=_3.KernelCapabilities;type PortMapping=_3.PortMapping;type Ulimit=_3.Ulimit;type ContainerDependency=_3.ContainerDependency;type HostVolumeProperties=_3.HostVolumeProperties;type RepositoryCredentials=_3.RepositoryCredentials;type InferenceAccelerator=_3.InferenceAccelerator;type RuntimePlatform=_3.RuntimePlatform;type Secret=_3.Secret;type EnvironmentFile=_3.EnvironmentFile;type VolumeFrom=_3.VolumeFrom;type HostEntry=_3.HostEntry;type TaskDefinitionPlacementConstraint=_3.TaskDefinitionPlacementConstraint;type Volume=_3.Volume;type Tmpfs=_3.Tmpfs;type ContainerDefinition=_3.ContainerDefinition;type KeyValuePair=_3.KeyValuePair;type HealthCheck=_3.HealthCheck;type LinuxParameters=_3.LinuxParameters;type ProxyConfiguration=_3.ProxyConfiguration;}namespace CapacityProvider{type AutoScalingGroupProvider=_4.AutoScalingGroupProvider;type ManagedScaling=_4.ManagedScaling;}namespace TaskSet{type NetworkConfiguration=_6.NetworkConfiguration;type ServiceRegistry=_6.ServiceRegistry;type LoadBalancer=_6.LoadBalancer;type AwsVpcConfiguration=_6.AwsVpcConfiguration;type Scale=_6.Scale;}}