import*as _0 from'./route';import*as _1 from'./virtualNode';import*as _2 from'./virtualRouter';import*as _3 from'./mesh';import*as _4 from'./gatewayRoute';import*as _5 from'./virtualGateway';import*as _6 from'./virtualService';export declare namespace AppMesh{const Route:typeof _0.R;const VirtualNode:typeof _1.R;const VirtualRouter:typeof _2.R;const Mesh:typeof _3.R;const GatewayRoute:typeof _4.R;const VirtualGateway:typeof _5.R;const VirtualService:typeof _6.R;type Route=_0.R;type VirtualNode=_1.R;type VirtualRouter=_2.R;type Mesh=_3.R;type GatewayRoute=_4.R;type VirtualGateway=_5.R;type VirtualService=_6.R;namespace Route{type Duration=_0.Duration;type WeightedTarget=_0.WeightedTarget;type GrpcRouteMetadataMatchMethod=_0.GrpcRouteMetadataMatchMethod;type HeaderMatchMethod=_0.HeaderMatchMethod;type RouteSpec=_0.RouteSpec;type HttpPathMatch=_0.HttpPathMatch;type GrpcRouteMetadata=_0.GrpcRouteMetadata;type QueryParameter=_0.QueryParameter;type HttpRouteMatch=_0.HttpRouteMatch;type HttpQueryParameterMatch=_0.HttpQueryParameterMatch;type GrpcRouteAction=_0.GrpcRouteAction;type GrpcRouteMatch=_0.GrpcRouteMatch;type HttpRoute=_0.HttpRoute;type TcpRouteAction=_0.TcpRouteAction;type GrpcRetryPolicy=_0.GrpcRetryPolicy;type TcpRoute=_0.TcpRoute;type HttpRetryPolicy=_0.HttpRetryPolicy;type GrpcTimeout=_0.GrpcTimeout;type GrpcRoute=_0.GrpcRoute;type TcpTimeout=_0.TcpTimeout;type HttpTimeout=_0.HttpTimeout;type HttpRouteHeader=_0.HttpRouteHeader;type HttpRouteAction=_0.HttpRouteAction;type MatchRange=_0.MatchRange;}namespace VirtualNode{type TlsValidationContextSdsTrust=_1.TlsValidationContextSdsTrust;type ClientPolicyTls=_1.ClientPolicyTls;type FileAccessLog=_1.FileAccessLog;type AwsCloudMapInstanceAttribute=_1.AwsCloudMapInstanceAttribute;type ListenerTlsValidationContext=_1.ListenerTlsValidationContext;type TcpTimeout=_1.TcpTimeout;type Backend=_1.Backend;type ListenerTimeout=_1.ListenerTimeout;type PortMapping=_1.PortMapping;type ListenerTls=_1.ListenerTls;type ListenerTlsSdsCertificate=_1.ListenerTlsSdsCertificate;type BackendDefaults=_1.BackendDefaults;type VirtualNodeTcpConnectionPool=_1.VirtualNodeTcpConnectionPool;type HttpTimeout=_1.HttpTimeout;type HealthCheck=_1.HealthCheck;type AwsCloudMapServiceDiscovery=_1.AwsCloudMapServiceDiscovery;type VirtualNodeHttpConnectionPool=_1.VirtualNodeHttpConnectionPool;type ListenerTlsFileCertificate=_1.ListenerTlsFileCertificate;type TlsValidationContext=_1.TlsValidationContext;type VirtualNodeSpec=_1.VirtualNodeSpec;type Listener=_1.Listener;type DnsServiceDiscovery=_1.DnsServiceDiscovery;type TlsValidationContextFileTrust=_1.TlsValidationContextFileTrust;type GrpcTimeout=_1.GrpcTimeout;type VirtualNodeConnectionPool=_1.VirtualNodeConnectionPool;type Logging=_1.Logging;type ServiceDiscovery=_1.ServiceDiscovery;type Duration=_1.Duration;type TlsValidationContextTrust=_1.TlsValidationContextTrust;type ListenerTlsAcmCertificate=_1.ListenerTlsAcmCertificate;type VirtualNodeHttp2ConnectionPool=_1.VirtualNodeHttp2ConnectionPool;type ListenerTlsCertificate=_1.ListenerTlsCertificate;type VirtualServiceBackend=_1.VirtualServiceBackend;type OutlierDetection=_1.OutlierDetection;type TlsValidationContextAcmTrust=_1.TlsValidationContextAcmTrust;type ClientPolicy=_1.ClientPolicy;type ClientTlsCertificate=_1.ClientTlsCertificate;type ListenerTlsValidationContextTrust=_1.ListenerTlsValidationContextTrust;type AccessLog=_1.AccessLog;type SubjectAlternativeNameMatchers=_1.SubjectAlternativeNameMatchers;type SubjectAlternativeNames=_1.SubjectAlternativeNames;type VirtualNodeGrpcConnectionPool=_1.VirtualNodeGrpcConnectionPool;}namespace VirtualRouter{type PortMapping=_2.PortMapping;type VirtualRouterSpec=_2.VirtualRouterSpec;type VirtualRouterListener=_2.VirtualRouterListener;}namespace Mesh{type MeshServiceDiscovery=_3.MeshServiceDiscovery;type MeshSpec=_3.MeshSpec;type EgressFilter=_3.EgressFilter;}namespace GatewayRoute{type HttpQueryParameterMatch=_4.HttpQueryParameterMatch;type HttpGatewayRoutePrefixRewrite=_4.HttpGatewayRoutePrefixRewrite;type HttpGatewayRouteHeaderMatch=_4.HttpGatewayRouteHeaderMatch;type GatewayRouteSpec=_4.GatewayRouteSpec;type HttpGatewayRouteHeader=_4.HttpGatewayRouteHeader;type GatewayRouteHostnameRewrite=_4.GatewayRouteHostnameRewrite;type QueryParameter=_4.QueryParameter;type GatewayRouteMetadataMatch=_4.GatewayRouteMetadataMatch;type GrpcGatewayRouteAction=_4.GrpcGatewayRouteAction;type GrpcGatewayRouteRewrite=_4.GrpcGatewayRouteRewrite;type GatewayRouteTarget=_4.GatewayRouteTarget;type GrpcGatewayRouteMatch=_4.GrpcGatewayRouteMatch;type HttpGatewayRoutePathRewrite=_4.HttpGatewayRoutePathRewrite;type GrpcGatewayRoute=_4.GrpcGatewayRoute;type GatewayRouteRangeMatch=_4.GatewayRouteRangeMatch;type HttpGatewayRouteRewrite=_4.HttpGatewayRouteRewrite;type GrpcGatewayRouteMetadata=_4.GrpcGatewayRouteMetadata;type HttpGatewayRouteAction=_4.HttpGatewayRouteAction;type GatewayRouteHostnameMatch=_4.GatewayRouteHostnameMatch;type GatewayRouteVirtualService=_4.GatewayRouteVirtualService;type HttpGatewayRouteMatch=_4.HttpGatewayRouteMatch;type HttpPathMatch=_4.HttpPathMatch;type HttpGatewayRoute=_4.HttpGatewayRoute;}namespace VirtualGateway{type VirtualGatewayTlsValidationContextTrust=_5.VirtualGatewayTlsValidationContextTrust;type VirtualGatewayListenerTlsAcmCertificate=_5.VirtualGatewayListenerTlsAcmCertificate;type VirtualGatewayTlsValidationContextFileTrust=_5.VirtualGatewayTlsValidationContextFileTrust;type VirtualGatewayHttp2ConnectionPool=_5.VirtualGatewayHttp2ConnectionPool;type VirtualGatewaySpec=_5.VirtualGatewaySpec;type VirtualGatewayTlsValidationContext=_5.VirtualGatewayTlsValidationContext;type VirtualGatewayListenerTlsCertificate=_5.VirtualGatewayListenerTlsCertificate;type VirtualGatewayGrpcConnectionPool=_5.VirtualGatewayGrpcConnectionPool;type VirtualGatewayConnectionPool=_5.VirtualGatewayConnectionPool;type SubjectAlternativeNames=_5.SubjectAlternativeNames;type VirtualGatewayClientTlsCertificate=_5.VirtualGatewayClientTlsCertificate;type VirtualGatewayListenerTlsValidationContext=_5.VirtualGatewayListenerTlsValidationContext;type VirtualGatewayListenerTlsFileCertificate=_5.VirtualGatewayListenerTlsFileCertificate;type VirtualGatewayLogging=_5.VirtualGatewayLogging;type VirtualGatewayListenerTls=_5.VirtualGatewayListenerTls;type SubjectAlternativeNameMatchers=_5.SubjectAlternativeNameMatchers;type VirtualGatewayClientPolicy=_5.VirtualGatewayClientPolicy;type VirtualGatewayTlsValidationContextSdsTrust=_5.VirtualGatewayTlsValidationContextSdsTrust;type VirtualGatewayListener=_5.VirtualGatewayListener;type VirtualGatewayPortMapping=_5.VirtualGatewayPortMapping;type VirtualGatewayBackendDefaults=_5.VirtualGatewayBackendDefaults;type VirtualGatewayClientPolicyTls=_5.VirtualGatewayClientPolicyTls;type VirtualGatewayAccessLog=_5.VirtualGatewayAccessLog;type VirtualGatewayFileAccessLog=_5.VirtualGatewayFileAccessLog;type VirtualGatewayHttpConnectionPool=_5.VirtualGatewayHttpConnectionPool;type VirtualGatewayHealthCheckPolicy=_5.VirtualGatewayHealthCheckPolicy;type VirtualGatewayTlsValidationContextAcmTrust=_5.VirtualGatewayTlsValidationContextAcmTrust;type VirtualGatewayListenerTlsValidationContextTrust=_5.VirtualGatewayListenerTlsValidationContextTrust;type VirtualGatewayListenerTlsSdsCertificate=_5.VirtualGatewayListenerTlsSdsCertificate;}namespace VirtualService{type VirtualRouterServiceProvider=_6.VirtualRouterServiceProvider;type VirtualNodeServiceProvider=_6.VirtualNodeServiceProvider;type VirtualServiceProvider=_6.VirtualServiceProvider;type VirtualServiceSpec=_6.VirtualServiceSpec;}}