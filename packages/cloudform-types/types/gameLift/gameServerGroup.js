"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const resource_1=require("../resource");class TargetTrackingConfiguration{constructor(properties){Object.assign(this,properties)}}exports.TargetTrackingConfiguration=TargetTrackingConfiguration;class LaunchTemplate{constructor(properties){Object.assign(this,properties)}}exports.LaunchTemplate=LaunchTemplate;class AutoScalingPolicy{constructor(properties){Object.assign(this,properties)}}exports.AutoScalingPolicy=AutoScalingPolicy;class InstanceDefinition{constructor(properties){Object.assign(this,properties)}}exports.InstanceDefinition=InstanceDefinition;class GameServerGroup extends resource_1.ResourceBase{constructor(properties){super("AWS::GameLift::GameServerGroup",properties)}}(exports.default=GameServerGroup).TargetTrackingConfiguration=TargetTrackingConfiguration,GameServerGroup.LaunchTemplate=LaunchTemplate,GameServerGroup.AutoScalingPolicy=AutoScalingPolicy,GameServerGroup.InstanceDefinition=InstanceDefinition,Object.defineProperty(exports,"__esModule",{value:!0});const resource_1=require("../resource");class PlayerLatencyPolicy{constructor(properties){Object.assign(this,properties)}}exports.PlayerLatencyPolicy=PlayerLatencyPolicy;class Destination{constructor(properties){Object.assign(this,properties)}}exports.Destination=Destination;class FilterConfiguration{constructor(properties){Object.assign(this,properties)}}exports.FilterConfiguration=FilterConfiguration;class PriorityConfiguration{constructor(properties){Object.assign(this,properties)}}exports.PriorityConfiguration=PriorityConfiguration;class GameSessionQueue extends resource_1.ResourceBase{constructor(properties){super("AWS::GameLift::GameSessionQueue",properties)}}(exports.default=GameSessionQueue).PlayerLatencyPolicy=PlayerLatencyPolicy,GameSessionQueue.Destination=Destination,GameSessionQueue.FilterConfiguration=FilterConfiguration,GameSessionQueue.PriorityConfiguration=PriorityConfiguration;