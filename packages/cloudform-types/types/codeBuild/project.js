"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const resource_1=require("../resource");class Environment{constructor(properties){Object.assign(this,properties)}}exports.Environment=Environment;class GitSubmodulesConfig{constructor(properties){Object.assign(this,properties)}}exports.GitSubmodulesConfig=GitSubmodulesConfig;class VpcConfig{constructor(properties){Object.assign(this,properties)}}exports.VpcConfig=VpcConfig;class Artifacts{constructor(properties){Object.assign(this,properties)}}exports.Artifacts=Artifacts;class RegistryCredential{constructor(properties){Object.assign(this,properties)}}exports.RegistryCredential=RegistryCredential;class CloudWatchLogsConfig{constructor(properties){Object.assign(this,properties)}}exports.CloudWatchLogsConfig=CloudWatchLogsConfig;class ProjectCache{constructor(properties){Object.assign(this,properties)}}exports.ProjectCache=ProjectCache;class ProjectBuildBatchConfig{constructor(properties){Object.assign(this,properties)}}exports.ProjectBuildBatchConfig=ProjectBuildBatchConfig;class BatchRestrictions{constructor(properties){Object.assign(this,properties)}}exports.BatchRestrictions=BatchRestrictions;class ProjectTriggers{constructor(properties){Object.assign(this,properties)}}exports.ProjectTriggers=ProjectTriggers;class Source{constructor(properties){Object.assign(this,properties)}}exports.Source=Source;class ProjectSourceVersion{constructor(properties){Object.assign(this,properties)}}exports.ProjectSourceVersion=ProjectSourceVersion;class LogsConfig{constructor(properties){Object.assign(this,properties)}}exports.LogsConfig=LogsConfig;class SourceAuth{constructor(properties){Object.assign(this,properties)}}exports.SourceAuth=SourceAuth;class ProjectFileSystemLocation{constructor(properties){Object.assign(this,properties)}}exports.ProjectFileSystemLocation=ProjectFileSystemLocation;class S3LogsConfig{constructor(properties){Object.assign(this,properties)}}exports.S3LogsConfig=S3LogsConfig;class WebhookFilter{constructor(properties){Object.assign(this,properties)}}exports.WebhookFilter=WebhookFilter;class BuildStatusConfig{constructor(properties){Object.assign(this,properties)}}exports.BuildStatusConfig=BuildStatusConfig;class EnvironmentVariable{constructor(properties){Object.assign(this,properties)}}exports.EnvironmentVariable=EnvironmentVariable;class Project extends resource_1.ResourceBase{constructor(properties){super("AWS::CodeBuild::Project",properties)}}(exports.default=Project).Environment=Environment,Project.GitSubmodulesConfig=GitSubmodulesConfig,Project.VpcConfig=VpcConfig,Project.Artifacts=Artifacts,Project.RegistryCredential=RegistryCredential,Project.CloudWatchLogsConfig=CloudWatchLogsConfig,Project.ProjectCache=ProjectCache,Project.ProjectBuildBatchConfig=ProjectBuildBatchConfig,Project.BatchRestrictions=BatchRestrictions,Project.ProjectTriggers=ProjectTriggers,Project.Source=Source,Project.ProjectSourceVersion=ProjectSourceVersion,Project.LogsConfig=LogsConfig,Project.SourceAuth=SourceAuth,Project.ProjectFileSystemLocation=ProjectFileSystemLocation,Project.S3LogsConfig=S3LogsConfig,Project.WebhookFilter=WebhookFilter,Project.BuildStatusConfig=BuildStatusConfig,Project.EnvironmentVariable=EnvironmentVariable;