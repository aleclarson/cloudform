"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const resource_1=require("../resource");class DeviceTemplate{constructor(properties){Object.assign(this,properties)}}exports.DeviceTemplate=DeviceTemplate;class PlacementTemplate{constructor(properties){Object.assign(this,properties)}}exports.PlacementTemplate=PlacementTemplate;class Project extends resource_1.ResourceBase{constructor(properties){super("AWS::IoT1Click::Project",properties)}}(exports.default=Project).DeviceTemplate=DeviceTemplate,Project.PlacementTemplate=PlacementTemplate,Object.defineProperty(exports,"__esModule",{value:!0});const resource_1=require("../resource");class CustomerManagedS3{constructor(properties){Object.assign(this,properties)}}exports.CustomerManagedS3=CustomerManagedS3;class RetentionPeriod{constructor(properties){Object.assign(this,properties)}}exports.RetentionPeriod=RetentionPeriod;class ServiceManagedS3{constructor(properties){Object.assign(this,properties)}}exports.ServiceManagedS3=ServiceManagedS3;class ChannelStorage{constructor(properties){Object.assign(this,properties)}}exports.ChannelStorage=ChannelStorage;class Channel extends resource_1.ResourceBase{constructor(properties){super("AWS::IoTAnalytics::Channel",properties||{})}}(exports.default=Channel).CustomerManagedS3=CustomerManagedS3,Channel.RetentionPeriod=RetentionPeriod,Channel.ServiceManagedS3=ServiceManagedS3,Channel.ChannelStorage=ChannelStorage;