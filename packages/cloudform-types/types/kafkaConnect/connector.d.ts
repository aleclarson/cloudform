import{ResourceBase}from'../resource';import{Value,List}from'../dataTypes';export declare class FirehoseLogDelivery{DeliveryStream?:Value<string>;Enabled:Value<boolean>;constructor(properties:FirehoseLogDelivery);}export declare class ApacheKafkaCluster{BootstrapServers:Value<string>;Vpc:Vpc;constructor(properties:ApacheKafkaCluster);}export declare class Vpc{SecurityGroups:List<Value<string>>;Subnets:List<Value<string>>;constructor(properties:Vpc);}export declare class S3LogDelivery{Bucket?:Value<string>;Enabled:Value<boolean>;Prefix?:Value<string>;constructor(properties:S3LogDelivery);}export declare class AutoScaling{MaxWorkerCount:Value<number>;MinWorkerCount:Value<number>;ScaleInPolicy:ScaleInPolicy;ScaleOutPolicy:ScaleOutPolicy;McuCount:Value<number>;constructor(properties:AutoScaling);}export declare class WorkerConfiguration{Revision:Value<number>;WorkerConfigurationArn:Value<string>;constructor(properties:WorkerConfiguration);}export declare class ScaleInPolicy{CpuUtilizationPercentage:Value<number>;constructor(properties:ScaleInPolicy);}export declare class Capacity{AutoScaling?:AutoScaling;ProvisionedCapacity?:ProvisionedCapacity;constructor(properties:Capacity);}export declare class LogDelivery{WorkerLogDelivery:WorkerLogDelivery;constructor(properties:LogDelivery);}export declare class KafkaClusterEncryptionInTransit{EncryptionType:Value<string>;constructor(properties:KafkaClusterEncryptionInTransit);}export declare class WorkerLogDelivery{CloudWatchLogs?:CloudWatchLogsLogDelivery;Firehose?:FirehoseLogDelivery;S3?:S3LogDelivery;constructor(properties:WorkerLogDelivery);}export declare class ScaleOutPolicy{CpuUtilizationPercentage:Value<number>;constructor(properties:ScaleOutPolicy);}export declare class KafkaCluster{ApacheKafkaCluster:ApacheKafkaCluster;constructor(properties:KafkaCluster);}export declare class ProvisionedCapacity{McuCount?:Value<number>;WorkerCount:Value<number>;constructor(properties:ProvisionedCapacity);}export declare class CloudWatchLogsLogDelivery{Enabled:Value<boolean>;LogGroup?:Value<string>;constructor(properties:CloudWatchLogsLogDelivery);}export declare class CustomPlugin{CustomPluginArn:Value<string>;Revision:Value<number>;constructor(properties:CustomPlugin);}export declare class Plugin{CustomPlugin:CustomPlugin;constructor(properties:Plugin);}export declare class KafkaClusterClientAuthentication{AuthenticationType:Value<string>;constructor(properties:KafkaClusterClientAuthentication);}export interface Properties{Capacity:Capacity;ConnectorConfiguration:{[key:string]:Value<string>;};ConnectorDescription?:Value<string>;ConnectorName:Value<string>;KafkaCluster:KafkaCluster;KafkaClusterClientAuthentication:KafkaClusterClientAuthentication;KafkaClusterEncryptionInTransit:KafkaClusterEncryptionInTransit;KafkaConnectVersion:Value<string>;LogDelivery?:LogDelivery;Plugins:List<Plugin>;ServiceExecutionRoleArn:Value<string>;WorkerConfiguration?:WorkerConfiguration;}declare class Connector extends ResourceBase<Properties>{static FirehoseLogDelivery:typeof FirehoseLogDelivery;static ApacheKafkaCluster:typeof ApacheKafkaCluster;static Vpc:typeof Vpc;static S3LogDelivery:typeof S3LogDelivery;static AutoScaling:typeof AutoScaling;static WorkerConfiguration:typeof WorkerConfiguration;static ScaleInPolicy:typeof ScaleInPolicy;static Capacity:typeof Capacity;static LogDelivery:typeof LogDelivery;static KafkaClusterEncryptionInTransit:typeof KafkaClusterEncryptionInTransit;static WorkerLogDelivery:typeof WorkerLogDelivery;static ScaleOutPolicy:typeof ScaleOutPolicy;static KafkaCluster:typeof KafkaCluster;static ProvisionedCapacity:typeof ProvisionedCapacity;static CloudWatchLogsLogDelivery:typeof CloudWatchLogsLogDelivery;static CustomPlugin:typeof CustomPlugin;static Plugin:typeof Plugin;static KafkaClusterClientAuthentication:typeof KafkaClusterClientAuthentication;constructor(properties:Properties);}export{Connector as R};