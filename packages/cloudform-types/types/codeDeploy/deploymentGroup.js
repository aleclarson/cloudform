"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const resource_1=require("../resource");class TargetGroupInfo{constructor(properties){Object.assign(this,properties)}}exports.TargetGroupInfo=TargetGroupInfo;class OnPremisesTagSetListObject{constructor(properties){Object.assign(this,properties)}}exports.OnPremisesTagSetListObject=OnPremisesTagSetListObject;class DeploymentStyle{constructor(properties){Object.assign(this,properties)}}exports.DeploymentStyle=DeploymentStyle;class EC2TagFilter{constructor(properties){Object.assign(this,properties)}}exports.EC2TagFilter=EC2TagFilter;class OnPremisesTagSet{constructor(properties){Object.assign(this,properties)}}exports.OnPremisesTagSet=OnPremisesTagSet;class LoadBalancerInfo{constructor(properties){Object.assign(this,properties)}}exports.LoadBalancerInfo=LoadBalancerInfo;class RevisionLocation{constructor(properties){Object.assign(this,properties)}}exports.RevisionLocation=RevisionLocation;class TriggerConfig{constructor(properties){Object.assign(this,properties)}}exports.TriggerConfig=TriggerConfig;class EC2TagSet{constructor(properties){Object.assign(this,properties)}}exports.EC2TagSet=EC2TagSet;class AlarmConfiguration{constructor(properties){Object.assign(this,properties)}}exports.AlarmConfiguration=AlarmConfiguration;class AutoRollbackConfiguration{constructor(properties){Object.assign(this,properties)}}exports.AutoRollbackConfiguration=AutoRollbackConfiguration;class S3Location{constructor(properties){Object.assign(this,properties)}}exports.S3Location=S3Location;class TagFilter{constructor(properties){Object.assign(this,properties)}}exports.TagFilter=TagFilter;class GitHubLocation{constructor(properties){Object.assign(this,properties)}}exports.GitHubLocation=GitHubLocation;class ELBInfo{constructor(properties){Object.assign(this,properties)}}exports.ELBInfo=ELBInfo;class Alarm{constructor(properties){Object.assign(this,properties)}}exports.Alarm=Alarm;class Deployment{constructor(properties){Object.assign(this,properties)}}exports.Deployment=Deployment;class EC2TagSetListObject{constructor(properties){Object.assign(this,properties)}}exports.EC2TagSetListObject=EC2TagSetListObject;class DeploymentGroup extends resource_1.ResourceBase{constructor(properties){super("AWS::CodeDeploy::DeploymentGroup",properties)}}(exports.default=DeploymentGroup).TargetGroupInfo=TargetGroupInfo,DeploymentGroup.OnPremisesTagSetListObject=OnPremisesTagSetListObject,DeploymentGroup.DeploymentStyle=DeploymentStyle,DeploymentGroup.EC2TagFilter=EC2TagFilter,DeploymentGroup.OnPremisesTagSet=OnPremisesTagSet,DeploymentGroup.LoadBalancerInfo=LoadBalancerInfo,DeploymentGroup.RevisionLocation=RevisionLocation,DeploymentGroup.TriggerConfig=TriggerConfig,DeploymentGroup.EC2TagSet=EC2TagSet,DeploymentGroup.AlarmConfiguration=AlarmConfiguration,DeploymentGroup.AutoRollbackConfiguration=AutoRollbackConfiguration,DeploymentGroup.S3Location=S3Location,DeploymentGroup.TagFilter=TagFilter,DeploymentGroup.GitHubLocation=GitHubLocation,DeploymentGroup.ELBInfo=ELBInfo,DeploymentGroup.Alarm=Alarm,DeploymentGroup.Deployment=Deployment,DeploymentGroup.EC2TagSetListObject=EC2TagSetListObject;