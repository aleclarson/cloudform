"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const resource_1=require("../resource");class HibernationOptions{constructor(properties){Object.assign(this,properties)}}exports.HibernationOptions=HibernationOptions;class Ebs{constructor(properties){Object.assign(this,properties)}}exports.Ebs=Ebs;class NoDevice{constructor(properties){Object.assign(this,properties)}}exports.NoDevice=NoDevice;class CreditSpecification{constructor(properties){Object.assign(this,properties)}}exports.CreditSpecification=CreditSpecification;class ElasticGpuSpecification{constructor(properties){Object.assign(this,properties)}}exports.ElasticGpuSpecification=ElasticGpuSpecification;class CpuOptions{constructor(properties){Object.assign(this,properties)}}exports.CpuOptions=CpuOptions;class LaunchTemplateSpecification{constructor(properties){Object.assign(this,properties)}}exports.LaunchTemplateSpecification=LaunchTemplateSpecification;class BlockDeviceMapping{constructor(properties){Object.assign(this,properties)}}exports.BlockDeviceMapping=BlockDeviceMapping;class PrivateIpAddressSpecification{constructor(properties){Object.assign(this,properties)}}exports.PrivateIpAddressSpecification=PrivateIpAddressSpecification;class Volume{constructor(properties){Object.assign(this,properties)}}exports.Volume=Volume;class NetworkInterface{constructor(properties){Object.assign(this,properties)}}exports.NetworkInterface=NetworkInterface;class InstanceIpv6Address{constructor(properties){Object.assign(this,properties)}}exports.InstanceIpv6Address=InstanceIpv6Address;class AssociationParameter{constructor(properties){Object.assign(this,properties)}}exports.AssociationParameter=AssociationParameter;class EnclaveOptions{constructor(properties){Object.assign(this,properties)}}exports.EnclaveOptions=EnclaveOptions;class LicenseSpecification{constructor(properties){Object.assign(this,properties)}}exports.LicenseSpecification=LicenseSpecification;class SsmAssociation{constructor(properties){Object.assign(this,properties)}}exports.SsmAssociation=SsmAssociation;class ElasticInferenceAccelerator{constructor(properties){Object.assign(this,properties)}}exports.ElasticInferenceAccelerator=ElasticInferenceAccelerator;class Instance extends resource_1.ResourceBase{constructor(properties){super("AWS::EC2::Instance",properties||{})}}(exports.default=Instance).HibernationOptions=HibernationOptions,Instance.Ebs=Ebs,Instance.NoDevice=NoDevice,Instance.CreditSpecification=CreditSpecification,Instance.ElasticGpuSpecification=ElasticGpuSpecification,Instance.CpuOptions=CpuOptions,Instance.LaunchTemplateSpecification=LaunchTemplateSpecification,Instance.BlockDeviceMapping=BlockDeviceMapping,Instance.PrivateIpAddressSpecification=PrivateIpAddressSpecification,Instance.Volume=Volume,Instance.NetworkInterface=NetworkInterface,Instance.InstanceIpv6Address=InstanceIpv6Address,Instance.AssociationParameter=AssociationParameter,Instance.EnclaveOptions=EnclaveOptions,Instance.LicenseSpecification=LicenseSpecification,Instance.SsmAssociation=SsmAssociation,Instance.ElasticInferenceAccelerator=ElasticInferenceAccelerator,Object.defineProperty(exports,"__esModule",{value:!0});const resource_1=require("../resource");class InternetGateway extends resource_1.ResourceBase{constructor(properties){super("AWS::EC2::InternetGateway",properties||{})}}exports.default=InternetGateway;