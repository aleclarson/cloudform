"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const resource_1=require("../resource");class ClientVpnAuthorizationRule extends resource_1.ResourceBase{constructor(properties){super("AWS::EC2::ClientVpnAuthorizationRule",properties)}}exports.default=ClientVpnAuthorizationRule,Object.defineProperty(exports,"__esModule",{value:!0});const resource_1=require("../resource");class ClientConnectOptions{constructor(properties){Object.assign(this,properties)}}exports.ClientConnectOptions=ClientConnectOptions;class DirectoryServiceAuthenticationRequest{constructor(properties){Object.assign(this,properties)}}exports.DirectoryServiceAuthenticationRequest=DirectoryServiceAuthenticationRequest;class TagSpecification{constructor(properties){Object.assign(this,properties)}}exports.TagSpecification=TagSpecification;class ClientAuthenticationRequest{constructor(properties){Object.assign(this,properties)}}exports.ClientAuthenticationRequest=ClientAuthenticationRequest;class FederatedAuthenticationRequest{constructor(properties){Object.assign(this,properties)}}exports.FederatedAuthenticationRequest=FederatedAuthenticationRequest;class ConnectionLogOptions{constructor(properties){Object.assign(this,properties)}}exports.ConnectionLogOptions=ConnectionLogOptions;class CertificateAuthenticationRequest{constructor(properties){Object.assign(this,properties)}}exports.CertificateAuthenticationRequest=CertificateAuthenticationRequest;class ClientVpnEndpoint extends resource_1.ResourceBase{constructor(properties){super("AWS::EC2::ClientVpnEndpoint",properties)}}(exports.default=ClientVpnEndpoint).ClientConnectOptions=ClientConnectOptions,ClientVpnEndpoint.DirectoryServiceAuthenticationRequest=DirectoryServiceAuthenticationRequest,ClientVpnEndpoint.TagSpecification=TagSpecification,ClientVpnEndpoint.ClientAuthenticationRequest=ClientAuthenticationRequest,ClientVpnEndpoint.FederatedAuthenticationRequest=FederatedAuthenticationRequest,ClientVpnEndpoint.ConnectionLogOptions=ConnectionLogOptions,ClientVpnEndpoint.CertificateAuthenticationRequest=CertificateAuthenticationRequest;