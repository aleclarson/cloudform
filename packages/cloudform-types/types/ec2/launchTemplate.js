"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const resource_1=require("../resource");class BlockDeviceMapping{constructor(properties){Object.assign(this,properties)}}exports.BlockDeviceMapping=BlockDeviceMapping;class SpotOptions{constructor(properties){Object.assign(this,properties)}}exports.SpotOptions=SpotOptions;class ElasticGpuSpecification{constructor(properties){Object.assign(this,properties)}}exports.ElasticGpuSpecification=ElasticGpuSpecification;class TagSpecification{constructor(properties){Object.assign(this,properties)}}exports.TagSpecification=TagSpecification;class Ebs{constructor(properties){Object.assign(this,properties)}}exports.Ebs=Ebs;class EnclaveOptions{constructor(properties){Object.assign(this,properties)}}exports.EnclaveOptions=EnclaveOptions;class LaunchTemplateData{constructor(properties){Object.assign(this,properties)}}exports.LaunchTemplateData=LaunchTemplateData;class MetadataOptions{constructor(properties){Object.assign(this,properties)}}exports.MetadataOptions=MetadataOptions;class CapacityReservationSpecification{constructor(properties){Object.assign(this,properties)}}exports.CapacityReservationSpecification=CapacityReservationSpecification;class CapacityReservationTarget{constructor(properties){Object.assign(this,properties)}}exports.CapacityReservationTarget=CapacityReservationTarget;class CpuOptions{constructor(properties){Object.assign(this,properties)}}exports.CpuOptions=CpuOptions;class PrivateIpAdd{constructor(properties){Object.assign(this,properties)}}exports.PrivateIpAdd=PrivateIpAdd;class IamInstanceProfile{constructor(properties){Object.assign(this,properties)}}exports.IamInstanceProfile=IamInstanceProfile;class LicenseSpecification{constructor(properties){Object.assign(this,properties)}}exports.LicenseSpecification=LicenseSpecification;class HibernationOptions{constructor(properties){Object.assign(this,properties)}}exports.HibernationOptions=HibernationOptions;class InstanceMarketOptions{constructor(properties){Object.assign(this,properties)}}exports.InstanceMarketOptions=InstanceMarketOptions;class CreditSpecification{constructor(properties){Object.assign(this,properties)}}exports.CreditSpecification=CreditSpecification;class Monitoring{constructor(properties){Object.assign(this,properties)}}exports.Monitoring=Monitoring;class Placement{constructor(properties){Object.assign(this,properties)}}exports.Placement=Placement;class Ipv6Add{constructor(properties){Object.assign(this,properties)}}exports.Ipv6Add=Ipv6Add;class NetworkInterface{constructor(properties){Object.assign(this,properties)}}exports.NetworkInterface=NetworkInterface;class LaunchTemplateElasticInferenceAccelerator{constructor(properties){Object.assign(this,properties)}}exports.LaunchTemplateElasticInferenceAccelerator=LaunchTemplateElasticInferenceAccelerator;class LaunchTemplateTagSpecification{constructor(properties){Object.assign(this,properties)}}exports.LaunchTemplateTagSpecification=LaunchTemplateTagSpecification;class LaunchTemplate extends resource_1.ResourceBase{constructor(properties){super("AWS::EC2::LaunchTemplate",properties||{})}}(exports.default=LaunchTemplate).BlockDeviceMapping=BlockDeviceMapping,LaunchTemplate.SpotOptions=SpotOptions,LaunchTemplate.ElasticGpuSpecification=ElasticGpuSpecification,LaunchTemplate.TagSpecification=TagSpecification,LaunchTemplate.Ebs=Ebs,LaunchTemplate.EnclaveOptions=EnclaveOptions,LaunchTemplate.LaunchTemplateData=LaunchTemplateData,LaunchTemplate.MetadataOptions=MetadataOptions,LaunchTemplate.CapacityReservationSpecification=CapacityReservationSpecification,LaunchTemplate.CapacityReservationTarget=CapacityReservationTarget,LaunchTemplate.CpuOptions=CpuOptions,LaunchTemplate.PrivateIpAdd=PrivateIpAdd,LaunchTemplate.IamInstanceProfile=IamInstanceProfile,LaunchTemplate.LicenseSpecification=LicenseSpecification,LaunchTemplate.HibernationOptions=HibernationOptions,LaunchTemplate.InstanceMarketOptions=InstanceMarketOptions,LaunchTemplate.CreditSpecification=CreditSpecification,LaunchTemplate.Monitoring=Monitoring,LaunchTemplate.Placement=Placement,LaunchTemplate.Ipv6Add=Ipv6Add,LaunchTemplate.NetworkInterface=NetworkInterface,LaunchTemplate.LaunchTemplateElasticInferenceAccelerator=LaunchTemplateElasticInferenceAccelerator,LaunchTemplate.LaunchTemplateTagSpecification=LaunchTemplateTagSpecification,Object.defineProperty(exports,"__esModule",{value:!0});const resource_1=require("../resource");class LocalGatewayRoute extends resource_1.ResourceBase{constructor(properties){super("AWS::EC2::LocalGatewayRoute",properties)}}exports.default=LocalGatewayRoute;