import{ResourceBase}from'../resource';import{Value,List}from'../dataTypes';export declare class FindingCriteria{Criterion?:{[key:string]:any;};ItemType?:Condition;constructor(properties:FindingCriteria);}export declare class Condition{Equals?:List<Value<string>>;LessThan?:Value<number>;LessThanOrEqual?:Value<number>;GreaterThan?:Value<number>;Lt?:Value<number>;Gte?:Value<number>;GreaterThanOrEqual?:Value<number>;Neq?:List<Value<string>>;Eq?:List<Value<string>>;Lte?:Value<number>;Gt?:Value<number>;NotEquals?:List<Value<string>>;constructor(properties:Condition);}export interface Properties{Action:Value<string>;Description:Value<string>;DetectorId:Value<string>;FindingCriteria:FindingCriteria;Rank:Value<number>;Name:Value<string>;}declare class Filter extends ResourceBase<Properties>{static FindingCriteria:typeof FindingCriteria;static Condition:typeof Condition;constructor(properties:Properties);}export{Filter as R};