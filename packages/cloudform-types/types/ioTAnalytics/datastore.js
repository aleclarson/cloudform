"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const resource_1=require("../resource");class FileFormatConfiguration{constructor(properties){Object.assign(this,properties)}}exports.FileFormatConfiguration=FileFormatConfiguration;class ServiceManagedS3{constructor(properties){Object.assign(this,properties)}}exports.ServiceManagedS3=ServiceManagedS3;class RetentionPeriod{constructor(properties){Object.assign(this,properties)}}exports.RetentionPeriod=RetentionPeriod;class CustomerManagedS3{constructor(properties){Object.assign(this,properties)}}exports.CustomerManagedS3=CustomerManagedS3;class SchemaDefinition{constructor(properties){Object.assign(this,properties)}}exports.SchemaDefinition=SchemaDefinition;class Column{constructor(properties){Object.assign(this,properties)}}exports.Column=Column;class ParquetConfiguration{constructor(properties){Object.assign(this,properties)}}exports.ParquetConfiguration=ParquetConfiguration;class DatastoreStorage{constructor(properties){Object.assign(this,properties)}}exports.DatastoreStorage=DatastoreStorage;class JsonConfiguration{constructor(properties){Object.assign(this,properties)}}exports.JsonConfiguration=JsonConfiguration;class Datastore extends resource_1.ResourceBase{constructor(properties){super("AWS::IoTAnalytics::Datastore",properties||{})}}(exports.default=Datastore).FileFormatConfiguration=FileFormatConfiguration,Datastore.ServiceManagedS3=ServiceManagedS3,Datastore.RetentionPeriod=RetentionPeriod,Datastore.CustomerManagedS3=CustomerManagedS3,Datastore.SchemaDefinition=SchemaDefinition,Datastore.Column=Column,Datastore.ParquetConfiguration=ParquetConfiguration,Datastore.DatastoreStorage=DatastoreStorage,Datastore.JsonConfiguration=JsonConfiguration;