"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.R=exports.TimestampPartition=exports.DatastorePartition=exports.Partition=exports.CustomerManagedS3Storage=exports.DatastoreStorage=exports.ParquetConfiguration=exports.Column=exports.SchemaDefinition=exports.DatastorePartitions=exports.CustomerManagedS3=exports.RetentionPeriod=exports.FileFormatConfiguration=exports.IotSiteWiseMultiLayerStorage=void 0;const resource_1=require("../resource");class IotSiteWiseMultiLayerStorage{constructor(properties){Object.assign(this,properties)}}exports.IotSiteWiseMultiLayerStorage=IotSiteWiseMultiLayerStorage;class FileFormatConfiguration{constructor(properties){Object.assign(this,properties)}}exports.FileFormatConfiguration=FileFormatConfiguration;class RetentionPeriod{constructor(properties){Object.assign(this,properties)}}exports.RetentionPeriod=RetentionPeriod;class CustomerManagedS3{constructor(properties){Object.assign(this,properties)}}exports.CustomerManagedS3=CustomerManagedS3;class DatastorePartitions{constructor(properties){Object.assign(this,properties)}}exports.DatastorePartitions=DatastorePartitions;class SchemaDefinition{constructor(properties){Object.assign(this,properties)}}exports.SchemaDefinition=SchemaDefinition;class Column{constructor(properties){Object.assign(this,properties)}}exports.Column=Column;class ParquetConfiguration{constructor(properties){Object.assign(this,properties)}}exports.ParquetConfiguration=ParquetConfiguration;class DatastoreStorage{constructor(properties){Object.assign(this,properties)}}exports.DatastoreStorage=DatastoreStorage;class CustomerManagedS3Storage{constructor(properties){Object.assign(this,properties)}}exports.CustomerManagedS3Storage=CustomerManagedS3Storage;class Partition{constructor(properties){Object.assign(this,properties)}}exports.Partition=Partition;class DatastorePartition{constructor(properties){Object.assign(this,properties)}}exports.DatastorePartition=DatastorePartition;class TimestampPartition{constructor(properties){Object.assign(this,properties)}}exports.TimestampPartition=TimestampPartition;class Datastore extends resource_1.ResourceBase{constructor(properties){super("AWS::IoTAnalytics::Datastore",properties||{})}}(exports.R=Datastore).IotSiteWiseMultiLayerStorage=IotSiteWiseMultiLayerStorage,Datastore.FileFormatConfiguration=FileFormatConfiguration,Datastore.RetentionPeriod=RetentionPeriod,Datastore.CustomerManagedS3=CustomerManagedS3,Datastore.DatastorePartitions=DatastorePartitions,Datastore.SchemaDefinition=SchemaDefinition,Datastore.Column=Column,Datastore.ParquetConfiguration=ParquetConfiguration,Datastore.DatastoreStorage=DatastoreStorage,Datastore.CustomerManagedS3Storage=CustomerManagedS3Storage,Datastore.Partition=Partition,Datastore.DatastorePartition=DatastorePartition,Datastore.TimestampPartition=TimestampPartition;