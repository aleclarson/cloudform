"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const resource_1=require("../resource");class CsvClassifier{constructor(properties){Object.assign(this,properties)}}exports.CsvClassifier=CsvClassifier;class GrokClassifier{constructor(properties){Object.assign(this,properties)}}exports.GrokClassifier=GrokClassifier;class JsonClassifier{constructor(properties){Object.assign(this,properties)}}exports.JsonClassifier=JsonClassifier;class XMLClassifier{constructor(properties){Object.assign(this,properties)}}exports.XMLClassifier=XMLClassifier;class Classifier extends resource_1.ResourceBase{constructor(properties){super("AWS::Glue::Classifier",properties||{})}}(exports.default=Classifier).CsvClassifier=CsvClassifier,Classifier.GrokClassifier=GrokClassifier,Classifier.JsonClassifier=JsonClassifier,Classifier.XMLClassifier=XMLClassifier,Object.defineProperty(exports,"__esModule",{value:!0});const resource_1=require("../resource");class ConnectionInput{constructor(properties){Object.assign(this,properties)}}exports.ConnectionInput=ConnectionInput;class PhysicalConnectionRequirements{constructor(properties){Object.assign(this,properties)}}exports.PhysicalConnectionRequirements=PhysicalConnectionRequirements;class Connection extends resource_1.ResourceBase{constructor(properties){super("AWS::Glue::Connection",properties)}}(exports.default=Connection).ConnectionInput=ConnectionInput,Connection.PhysicalConnectionRequirements=PhysicalConnectionRequirements;