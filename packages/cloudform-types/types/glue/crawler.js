"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const resource_1=require("../resource");class CatalogTarget{constructor(properties){Object.assign(this,properties)}}exports.CatalogTarget=CatalogTarget;class Schedule{constructor(properties){Object.assign(this,properties)}}exports.Schedule=Schedule;class SchemaChangePolicy{constructor(properties){Object.assign(this,properties)}}exports.SchemaChangePolicy=SchemaChangePolicy;class Targets{constructor(properties){Object.assign(this,properties)}}exports.Targets=Targets;class JdbcTarget{constructor(properties){Object.assign(this,properties)}}exports.JdbcTarget=JdbcTarget;class DynamoDBTarget{constructor(properties){Object.assign(this,properties)}}exports.DynamoDBTarget=DynamoDBTarget;class S3Target{constructor(properties){Object.assign(this,properties)}}exports.S3Target=S3Target;class Crawler extends resource_1.ResourceBase{constructor(properties){super("AWS::Glue::Crawler",properties)}}(exports.default=Crawler).CatalogTarget=CatalogTarget,Crawler.Schedule=Schedule,Crawler.SchemaChangePolicy=SchemaChangePolicy,Crawler.Targets=Targets,Crawler.JdbcTarget=JdbcTarget,Crawler.DynamoDBTarget=DynamoDBTarget,Crawler.S3Target=S3Target,Object.defineProperty(exports,"__esModule",{value:!0});const resource_1=require("../resource");class DataCatalogEncryptionSettingsInner{constructor(properties){Object.assign(this,properties)}}exports.DataCatalogEncryptionSettingsInner=DataCatalogEncryptionSettingsInner;class EncryptionAtRest{constructor(properties){Object.assign(this,properties)}}exports.EncryptionAtRest=EncryptionAtRest;class ConnectionPasswordEncryption{constructor(properties){Object.assign(this,properties)}}exports.ConnectionPasswordEncryption=ConnectionPasswordEncryption;class DataCatalogEncryptionSettings extends resource_1.ResourceBase{constructor(properties){super("AWS::Glue::DataCatalogEncryptionSettings",properties)}}(exports.default=DataCatalogEncryptionSettings).DataCatalogEncryptionSettings=DataCatalogEncryptionSettingsInner,DataCatalogEncryptionSettings.EncryptionAtRest=EncryptionAtRest,DataCatalogEncryptionSettings.ConnectionPasswordEncryption=ConnectionPasswordEncryption;