"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const resource_1=require("../resource");class PartitionInput{constructor(properties){Object.assign(this,properties)}}exports.PartitionInput=PartitionInput;class Order{constructor(properties){Object.assign(this,properties)}}exports.Order=Order;class SchemaReference{constructor(properties){Object.assign(this,properties)}}exports.SchemaReference=SchemaReference;class SerdeInfo{constructor(properties){Object.assign(this,properties)}}exports.SerdeInfo=SerdeInfo;class Column{constructor(properties){Object.assign(this,properties)}}exports.Column=Column;class StorageDescriptor{constructor(properties){Object.assign(this,properties)}}exports.StorageDescriptor=StorageDescriptor;class SkewedInfo{constructor(properties){Object.assign(this,properties)}}exports.SkewedInfo=SkewedInfo;class SchemaId{constructor(properties){Object.assign(this,properties)}}exports.SchemaId=SchemaId;class Partition extends resource_1.ResourceBase{constructor(properties){super("AWS::Glue::Partition",properties)}}(exports.default=Partition).PartitionInput=PartitionInput,Partition.Order=Order,Partition.SchemaReference=SchemaReference,Partition.SerdeInfo=SerdeInfo,Partition.Column=Column,Partition.StorageDescriptor=StorageDescriptor,Partition.SkewedInfo=SkewedInfo,Partition.SchemaId=SchemaId,Object.defineProperty(exports,"__esModule",{value:!0});const resource_1=require("../resource");class Registry extends resource_1.ResourceBase{constructor(properties){super("AWS::Glue::Registry",properties)}}exports.default=Registry;