import*as _0 from'./devEndpoint';import*as _1 from'./schemaVersionMetadata';import*as _2 from'./mlTransform';import*as _3 from'./connection';import*as _4 from'./partition';import*as _5 from'./trigger';import*as _6 from'./securityConfiguration';import*as _7 from'./schemaVersion';import*as _8 from'./dataCatalogEncryptionSettings';import*as _9 from'./workflow';import*as _a from'./job';import*as _b from'./database';import*as _c from'./crawler';import*as _d from'./classifier';import*as _e from'./schema';import*as _f from'./table';import*as _10 from'./registry';export declare namespace Glue{const DevEndpoint:typeof _0.R;const SchemaVersionMetadata:typeof _1.R;const MLTransform:typeof _2.R;const Connection:typeof _3.R;const Partition:typeof _4.R;const Trigger:typeof _5.R;const SecurityConfiguration:typeof _6.R;const SchemaVersion:typeof _7.R;const DataCatalogEncryptionSettings:typeof _8.R;const Workflow:typeof _9.R;const Job:typeof _a.R;const Database:typeof _b.R;const Crawler:typeof _c.R;const Classifier:typeof _d.R;const Schema:typeof _e.R;const Table:typeof _f.R;const Registry:typeof _10.R;type DevEndpoint=_0.R;type SchemaVersionMetadata=_1.R;type MLTransform=_2.R;type Connection=_3.R;type Partition=_4.R;type Trigger=_5.R;type SecurityConfiguration=_6.R;type SchemaVersion=_7.R;type DataCatalogEncryptionSettings=_8.R;type Workflow=_9.R;type Job=_a.R;type Database=_b.R;type Crawler=_c.R;type Classifier=_d.R;type Schema=_e.R;type Table=_f.R;type Registry=_10.R;namespace MLTransform{type FindMatchesParameters=_2.FindMatchesParameters;type MLUserDataEncryption=_2.MLUserDataEncryption;type InputRecordTables=_2.InputRecordTables;type GlueTables=_2.GlueTables;type TransformEncryption=_2.TransformEncryption;type TransformParameters=_2.TransformParameters;}namespace Connection{type ConnectionInput=_3.ConnectionInput;type PhysicalConnectionRequirements=_3.PhysicalConnectionRequirements;}namespace Partition{type PartitionInput=_4.PartitionInput;type Order=_4.Order;type SchemaReference=_4.SchemaReference;type SerdeInfo=_4.SerdeInfo;type Column=_4.Column;type StorageDescriptor=_4.StorageDescriptor;type SkewedInfo=_4.SkewedInfo;type SchemaId=_4.SchemaId;}namespace Trigger{type Condition=_5.Condition;type Predicate=_5.Predicate;type Action=_5.Action;type NotificationProperty=_5.NotificationProperty;}namespace SecurityConfiguration{type EncryptionConfiguration=_6.EncryptionConfiguration;type JobBookmarksEncryption=_6.JobBookmarksEncryption;type S3Encryptions=_6.S3Encryptions;type S3Encryption=_6.S3Encryption;type CloudWatchEncryption=_6.CloudWatchEncryption;}namespace SchemaVersion{type Schema=_7.Schema;}namespace DataCatalogEncryptionSettings{type EncryptionAtRest=_8.EncryptionAtRest;type ConnectionPasswordEncryption=_8.ConnectionPasswordEncryption;}namespace Job{type JobCommand=_a.JobCommand;type ConnectionsList=_a.ConnectionsList;type NotificationProperty=_a.NotificationProperty;type ExecutionProperty=_a.ExecutionProperty;}namespace Database{type DatabaseInput=_b.DatabaseInput;type PrincipalPrivileges=_b.PrincipalPrivileges;type DatabaseIdentifier=_b.DatabaseIdentifier;type DataLakePrincipal=_b.DataLakePrincipal;}namespace Crawler{type CatalogTarget=_c.CatalogTarget;type Schedule=_c.Schedule;type SchemaChangePolicy=_c.SchemaChangePolicy;type MongoDBTarget=_c.MongoDBTarget;type Targets=_c.Targets;type JdbcTarget=_c.JdbcTarget;type DynamoDBTarget=_c.DynamoDBTarget;type S3Target=_c.S3Target;type RecrawlPolicy=_c.RecrawlPolicy;}namespace Classifier{type CsvClassifier=_d.CsvClassifier;type GrokClassifier=_d.GrokClassifier;type JsonClassifier=_d.JsonClassifier;type XMLClassifier=_d.XMLClassifier;}namespace Schema{type SchemaVersion=_e.SchemaVersion;type Registry=_e.Registry;}namespace Table{type Column=_f.Column;type TableInput=_f.TableInput;type SerdeInfo=_f.SerdeInfo;type SchemaId=_f.SchemaId;type Order=_f.Order;type SkewedInfo=_f.SkewedInfo;type StorageDescriptor=_f.StorageDescriptor;type SchemaReference=_f.SchemaReference;type TableIdentifier=_f.TableIdentifier;}}