import{ResourceBase}from'../resource';import{Value,List}from'../dataTypes';export declare class CatalogTarget{DatabaseName?:Value<string>;Tables?:List<Value<string>>;constructor(properties:CatalogTarget);}export declare class Schedule{ScheduleExpression?:Value<string>;constructor(properties:Schedule);}export declare class SchemaChangePolicy{UpdateBehavior?:Value<string>;DeleteBehavior?:Value<string>;constructor(properties:SchemaChangePolicy);}export declare class MongoDBTarget{ConnectionName?:Value<string>;Path?:Value<string>;constructor(properties:MongoDBTarget);}export declare class Targets{S3Targets?:List<S3Target>;CatalogTargets?:List<CatalogTarget>;MongoDBTargets?:List<MongoDBTarget>;JdbcTargets?:List<JdbcTarget>;DynamoDBTargets?:List<DynamoDBTarget>;constructor(properties:Targets);}export declare class JdbcTarget{ConnectionName?:Value<string>;Path?:Value<string>;Exclusions?:List<Value<string>>;constructor(properties:JdbcTarget);}export declare class DynamoDBTarget{Path?:Value<string>;constructor(properties:DynamoDBTarget);}export declare class S3Target{ConnectionName?:Value<string>;Path?:Value<string>;SampleSize?:Value<number>;Exclusions?:List<Value<string>>;DlqEventQueueArn?:Value<string>;EventQueueArn?:Value<string>;constructor(properties:S3Target);}export declare class RecrawlPolicy{RecrawlBehavior?:Value<string>;constructor(properties:RecrawlPolicy);}export interface Properties{Classifiers?:List<Value<string>>;Description?:Value<string>;SchemaChangePolicy?:SchemaChangePolicy;Configuration?:Value<string>;RecrawlPolicy?:RecrawlPolicy;DatabaseName?:Value<string>;Targets:Targets;CrawlerSecurityConfiguration?:Value<string>;Name?:Value<string>;Role:Value<string>;Schedule?:Schedule;TablePrefix?:Value<string>;Tags?:{[key:string]:any;};}declare class Crawler extends ResourceBase<Properties>{static CatalogTarget:typeof CatalogTarget;static Schedule:typeof Schedule;static SchemaChangePolicy:typeof SchemaChangePolicy;static MongoDBTarget:typeof MongoDBTarget;static Targets:typeof Targets;static JdbcTarget:typeof JdbcTarget;static DynamoDBTarget:typeof DynamoDBTarget;static S3Target:typeof S3Target;static RecrawlPolicy:typeof RecrawlPolicy;constructor(properties:Properties);}export{Crawler as R};