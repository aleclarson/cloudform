"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const resource_1=require("../resource");class ForwardConfig{constructor(properties){Object.assign(this,properties)}}exports.ForwardConfig=ForwardConfig;class AuthenticateOidcConfig{constructor(properties){Object.assign(this,properties)}}exports.AuthenticateOidcConfig=AuthenticateOidcConfig;class Certificate{constructor(properties){Object.assign(this,properties)}}exports.Certificate=Certificate;class TargetGroupStickinessConfig{constructor(properties){Object.assign(this,properties)}}exports.TargetGroupStickinessConfig=TargetGroupStickinessConfig;class AuthenticateCognitoConfig{constructor(properties){Object.assign(this,properties)}}exports.AuthenticateCognitoConfig=AuthenticateCognitoConfig;class Action{constructor(properties){Object.assign(this,properties)}}exports.Action=Action;class RedirectConfig{constructor(properties){Object.assign(this,properties)}}exports.RedirectConfig=RedirectConfig;class FixedResponseConfig{constructor(properties){Object.assign(this,properties)}}exports.FixedResponseConfig=FixedResponseConfig;class TargetGroupTuple{constructor(properties){Object.assign(this,properties)}}exports.TargetGroupTuple=TargetGroupTuple;class Listener extends resource_1.ResourceBase{constructor(properties){super("AWS::ElasticLoadBalancingV2::Listener",properties)}}(exports.default=Listener).ForwardConfig=ForwardConfig,Listener.AuthenticateOidcConfig=AuthenticateOidcConfig,Listener.Certificate=Certificate,Listener.TargetGroupStickinessConfig=TargetGroupStickinessConfig,Listener.AuthenticateCognitoConfig=AuthenticateCognitoConfig,Listener.Action=Action,Listener.RedirectConfig=RedirectConfig,Listener.FixedResponseConfig=FixedResponseConfig,Listener.TargetGroupTuple=TargetGroupTuple,Object.defineProperty(exports,"__esModule",{value:!0});const resource_1=require("../resource");class Certificate{constructor(properties){Object.assign(this,properties)}}exports.Certificate=Certificate;class ListenerCertificate extends resource_1.ResourceBase{constructor(properties){super("AWS::ElasticLoadBalancingV2::ListenerCertificate",properties)}}(exports.default=ListenerCertificate).Certificate=Certificate;