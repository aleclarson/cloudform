"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const resource_1=require("../resource");class JsonMatchPattern{constructor(properties){Object.assign(this,properties)}}exports.JsonMatchPattern=JsonMatchPattern;class XssMatchStatement{constructor(properties){Object.assign(this,properties)}}exports.XssMatchStatement=XssMatchStatement;class LabelMatchStatement{constructor(properties){Object.assign(this,properties)}}exports.LabelMatchStatement=LabelMatchStatement;class RuleAction{constructor(properties){Object.assign(this,properties)}}exports.RuleAction=RuleAction;class Statement{constructor(properties){Object.assign(this,properties)}}exports.Statement=Statement;class LabelSummary{constructor(properties){Object.assign(this,properties)}}exports.LabelSummary=LabelSummary;class FieldToMatch{constructor(properties){Object.assign(this,properties)}}exports.FieldToMatch=FieldToMatch;class IPSetReferenceStatement{constructor(properties){Object.assign(this,properties)}}exports.IPSetReferenceStatement=IPSetReferenceStatement;class RateBasedStatement{constructor(properties){Object.assign(this,properties)}}exports.RateBasedStatement=RateBasedStatement;class VisibilityConfig{constructor(properties){Object.assign(this,properties)}}exports.VisibilityConfig=VisibilityConfig;class GeoMatchStatement{constructor(properties){Object.assign(this,properties)}}exports.GeoMatchStatement=GeoMatchStatement;class AndStatement{constructor(properties){Object.assign(this,properties)}}exports.AndStatement=AndStatement;class IPSetForwardedIPConfiguration{constructor(properties){Object.assign(this,properties)}}exports.IPSetForwardedIPConfiguration=IPSetForwardedIPConfiguration;class TextTransformation{constructor(properties){Object.assign(this,properties)}}exports.TextTransformation=TextTransformation;class ByteMatchStatement{constructor(properties){Object.assign(this,properties)}}exports.ByteMatchStatement=ByteMatchStatement;class RegexPatternSetReferenceStatement{constructor(properties){Object.assign(this,properties)}}exports.RegexPatternSetReferenceStatement=RegexPatternSetReferenceStatement;class OrStatement{constructor(properties){Object.assign(this,properties)}}exports.OrStatement=OrStatement;class Rule{constructor(properties){Object.assign(this,properties)}}exports.Rule=Rule;class JsonBody{constructor(properties){Object.assign(this,properties)}}exports.JsonBody=JsonBody;class CustomResponseBody{constructor(properties){Object.assign(this,properties)}}exports.CustomResponseBody=CustomResponseBody;class Label{constructor(properties){Object.assign(this,properties)}}exports.Label=Label;class SqliMatchStatement{constructor(properties){Object.assign(this,properties)}}exports.SqliMatchStatement=SqliMatchStatement;class NotStatement{constructor(properties){Object.assign(this,properties)}}exports.NotStatement=NotStatement;class ForwardedIPConfiguration{constructor(properties){Object.assign(this,properties)}}exports.ForwardedIPConfiguration=ForwardedIPConfiguration;class SizeConstraintStatement{constructor(properties){Object.assign(this,properties)}}exports.SizeConstraintStatement=SizeConstraintStatement;class RuleGroup extends resource_1.ResourceBase{constructor(properties){super("AWS::WAFv2::RuleGroup",properties)}}(exports.default=RuleGroup).JsonMatchPattern=JsonMatchPattern,RuleGroup.XssMatchStatement=XssMatchStatement,RuleGroup.LabelMatchStatement=LabelMatchStatement,RuleGroup.RuleAction=RuleAction,RuleGroup.Statement=Statement,RuleGroup.LabelSummary=LabelSummary,RuleGroup.FieldToMatch=FieldToMatch,RuleGroup.IPSetReferenceStatement=IPSetReferenceStatement,RuleGroup.RateBasedStatement=RateBasedStatement,RuleGroup.VisibilityConfig=VisibilityConfig,RuleGroup.GeoMatchStatement=GeoMatchStatement,RuleGroup.AndStatement=AndStatement,RuleGroup.IPSetForwardedIPConfiguration=IPSetForwardedIPConfiguration,RuleGroup.TextTransformation=TextTransformation,RuleGroup.ByteMatchStatement=ByteMatchStatement,RuleGroup.RegexPatternSetReferenceStatement=RegexPatternSetReferenceStatement,RuleGroup.OrStatement=OrStatement,RuleGroup.Rule=Rule,RuleGroup.JsonBody=JsonBody,RuleGroup.CustomResponseBody=CustomResponseBody,RuleGroup.Label=Label,RuleGroup.SqliMatchStatement=SqliMatchStatement,RuleGroup.NotStatement=NotStatement,RuleGroup.ForwardedIPConfiguration=ForwardedIPConfiguration,RuleGroup.SizeConstraintStatement=SizeConstraintStatement,Object.defineProperty(exports,"__esModule",{value:!0});const resource_1=require("../resource");class CustomRequestHandling{constructor(properties){Object.assign(this,properties)}}exports.CustomRequestHandling=CustomRequestHandling;class ManagedRuleGroupStatement{constructor(properties){Object.assign(this,properties)}}exports.ManagedRuleGroupStatement=ManagedRuleGroupStatement;class TextTransformation{constructor(properties){Object.assign(this,properties)}}exports.TextTransformation=TextTransformation;class AllowAction{constructor(properties){Object.assign(this,properties)}}exports.AllowAction=AllowAction;class DefaultAction{constructor(properties){Object.assign(this,properties)}}exports.DefaultAction=DefaultAction;class XssMatchStatement{constructor(properties){Object.assign(this,properties)}}exports.XssMatchStatement=XssMatchStatement;class ByteMatchStatement{constructor(properties){Object.assign(this,properties)}}exports.ByteMatchStatement=ByteMatchStatement;class ForwardedIPConfiguration{constructor(properties){Object.assign(this,properties)}}exports.ForwardedIPConfiguration=ForwardedIPConfiguration;class OrStatement{constructor(properties){Object.assign(this,properties)}}exports.OrStatement=OrStatement;class Label{constructor(properties){Object.assign(this,properties)}}exports.Label=Label;class CustomHTTPHeader{constructor(properties){Object.assign(this,properties)}}exports.CustomHTTPHeader=CustomHTTPHeader;class RegexPatternSetReferenceStatement{constructor(properties){Object.assign(this,properties)}}exports.RegexPatternSetReferenceStatement=RegexPatternSetReferenceStatement;class IPSetForwardedIPConfiguration{constructor(properties){Object.assign(this,properties)}}exports.IPSetForwardedIPConfiguration=IPSetForwardedIPConfiguration;class CustomResponseBody{constructor(properties){Object.assign(this,properties)}}exports.CustomResponseBody=CustomResponseBody;class Statement{constructor(properties){Object.assign(this,properties)}}exports.Statement=Statement;class BlockAction{constructor(properties){Object.assign(this,properties)}}exports.BlockAction=BlockAction;class RuleGroupReferenceStatement{constructor(properties){Object.assign(this,properties)}}exports.RuleGroupReferenceStatement=RuleGroupReferenceStatement;class LabelMatchStatement{constructor(properties){Object.assign(this,properties)}}exports.LabelMatchStatement=LabelMatchStatement;class JsonMatchPattern{constructor(properties){Object.assign(this,properties)}}exports.JsonMatchPattern=JsonMatchPattern;class AndStatement{constructor(properties){Object.assign(this,properties)}}exports.AndStatement=AndStatement;class CountAction{constructor(properties){Object.assign(this,properties)}}exports.CountAction=CountAction;class SizeConstraintStatement{constructor(properties){Object.assign(this,properties)}}exports.SizeConstraintStatement=SizeConstraintStatement;class FieldToMatch{constructor(properties){Object.assign(this,properties)}}exports.FieldToMatch=FieldToMatch;class SqliMatchStatement{constructor(properties){Object.assign(this,properties)}}exports.SqliMatchStatement=SqliMatchStatement;class GeoMatchStatement{constructor(properties){Object.assign(this,properties)}}exports.GeoMatchStatement=GeoMatchStatement;class RuleAction{constructor(properties){Object.assign(this,properties)}}exports.RuleAction=RuleAction;class JsonBody{constructor(properties){Object.assign(this,properties)}}exports.JsonBody=JsonBody;class NotStatement{constructor(properties){Object.assign(this,properties)}}exports.NotStatement=NotStatement;class OverrideAction{constructor(properties){Object.assign(this,properties)}}exports.OverrideAction=OverrideAction;class Rule{constructor(properties){Object.assign(this,properties)}}exports.Rule=Rule;class CustomResponse{constructor(properties){Object.assign(this,properties)}}exports.CustomResponse=CustomResponse;class RateBasedStatement{constructor(properties){Object.assign(this,properties)}}exports.RateBasedStatement=RateBasedStatement;class ExcludedRule{constructor(properties){Object.assign(this,properties)}}exports.ExcludedRule=ExcludedRule;class VisibilityConfig{constructor(properties){Object.assign(this,properties)}}exports.VisibilityConfig=VisibilityConfig;class IPSetReferenceStatement{constructor(properties){Object.assign(this,properties)}}exports.IPSetReferenceStatement=IPSetReferenceStatement;class WebACL extends resource_1.ResourceBase{constructor(properties){super("AWS::WAFv2::WebACL",properties)}}(exports.default=WebACL).CustomRequestHandling=CustomRequestHandling,WebACL.ManagedRuleGroupStatement=ManagedRuleGroupStatement,WebACL.TextTransformation=TextTransformation,WebACL.AllowAction=AllowAction,WebACL.DefaultAction=DefaultAction,WebACL.XssMatchStatement=XssMatchStatement,WebACL.ByteMatchStatement=ByteMatchStatement,WebACL.ForwardedIPConfiguration=ForwardedIPConfiguration,WebACL.OrStatement=OrStatement,WebACL.Label=Label,WebACL.CustomHTTPHeader=CustomHTTPHeader,WebACL.RegexPatternSetReferenceStatement=RegexPatternSetReferenceStatement,WebACL.IPSetForwardedIPConfiguration=IPSetForwardedIPConfiguration,WebACL.CustomResponseBody=CustomResponseBody,WebACL.Statement=Statement,WebACL.BlockAction=BlockAction,WebACL.RuleGroupReferenceStatement=RuleGroupReferenceStatement,WebACL.LabelMatchStatement=LabelMatchStatement,WebACL.JsonMatchPattern=JsonMatchPattern,WebACL.AndStatement=AndStatement,WebACL.CountAction=CountAction,WebACL.SizeConstraintStatement=SizeConstraintStatement,WebACL.FieldToMatch=FieldToMatch,WebACL.SqliMatchStatement=SqliMatchStatement,WebACL.GeoMatchStatement=GeoMatchStatement,WebACL.RuleAction=RuleAction,WebACL.JsonBody=JsonBody,WebACL.NotStatement=NotStatement,WebACL.OverrideAction=OverrideAction,WebACL.Rule=Rule,WebACL.CustomResponse=CustomResponse,WebACL.RateBasedStatement=RateBasedStatement,WebACL.ExcludedRule=ExcludedRule,WebACL.VisibilityConfig=VisibilityConfig,WebACL.IPSetReferenceStatement=IPSetReferenceStatement;