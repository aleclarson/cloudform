import{ResourceBase}from'../resource';import{Value,List}from'../dataTypes';export declare class GeoLocation{ContinentCode?:Value<string>;CountryCode?:Value<string>;SubdivisionCode?:Value<string>;constructor(properties:GeoLocation);}export declare class RecordSet{AliasTarget?:AliasTarget;CidrRoutingConfig?:CidrRoutingConfig;Failover?:Value<string>;GeoLocation?:GeoLocation;HealthCheckId?:Value<string>;HostedZoneId?:Value<string>;HostedZoneName?:Value<string>;MultiValueAnswer?:Value<boolean>;Name:Value<string>;Region?:Value<string>;ResourceRecords?:List<Value<string>>;SetIdentifier?:Value<string>;TTL?:Value<string>;Type:Value<string>;Weight?:Value<number>;constructor(properties:RecordSet);}export declare class CidrRoutingConfig{CollectionId:Value<string>;LocationName:Value<string>;constructor(properties:CidrRoutingConfig);}export declare class AliasTarget{DNSName:Value<string>;EvaluateTargetHealth?:Value<boolean>;HostedZoneId:Value<string>;constructor(properties:AliasTarget);}export interface Properties{Comment?:Value<string>;HostedZoneId?:Value<string>;HostedZoneName?:Value<string>;RecordSets?:List<RecordSet>;}declare class RecordSetGroup extends ResourceBase<Properties>{static GeoLocation:typeof GeoLocation;static RecordSet:typeof RecordSet;static CidrRoutingConfig:typeof CidrRoutingConfig;static AliasTarget:typeof AliasTarget;constructor(properties?:Properties);}export{RecordSetGroup as R};