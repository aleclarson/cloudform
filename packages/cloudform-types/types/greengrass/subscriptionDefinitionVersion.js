"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const resource_1=require("../resource");class Subscription{constructor(properties){Object.assign(this,properties)}}exports.Subscription=Subscription;class SubscriptionDefinitionVersion extends resource_1.ResourceBase{constructor(properties){super("AWS::Greengrass::SubscriptionDefinitionVersion",properties)}}(exports.default=SubscriptionDefinitionVersion).Subscription=Subscription,Object.defineProperty(exports,"__esModule",{value:!0});const resource_1=require("../resource");class ComponentPlatform{constructor(properties){Object.assign(this,properties)}}exports.ComponentPlatform=ComponentPlatform;class LambdaContainerParams{constructor(properties){Object.assign(this,properties)}}exports.LambdaContainerParams=LambdaContainerParams;class LambdaVolumeMount{constructor(properties){Object.assign(this,properties)}}exports.LambdaVolumeMount=LambdaVolumeMount;class LambdaFunctionRecipeSource{constructor(properties){Object.assign(this,properties)}}exports.LambdaFunctionRecipeSource=LambdaFunctionRecipeSource;class ComponentDependencyRequirement{constructor(properties){Object.assign(this,properties)}}exports.ComponentDependencyRequirement=ComponentDependencyRequirement;class LambdaDeviceMount{constructor(properties){Object.assign(this,properties)}}exports.LambdaDeviceMount=LambdaDeviceMount;class LambdaLinuxProcessParams{constructor(properties){Object.assign(this,properties)}}exports.LambdaLinuxProcessParams=LambdaLinuxProcessParams;class LambdaEventSource{constructor(properties){Object.assign(this,properties)}}exports.LambdaEventSource=LambdaEventSource;class LambdaExecutionParameters{constructor(properties){Object.assign(this,properties)}}exports.LambdaExecutionParameters=LambdaExecutionParameters;class ComponentVersion extends resource_1.ResourceBase{constructor(properties){super("AWS::GreengrassV2::ComponentVersion",properties||{})}}(exports.default=ComponentVersion).ComponentPlatform=ComponentPlatform,ComponentVersion.LambdaContainerParams=LambdaContainerParams,ComponentVersion.LambdaVolumeMount=LambdaVolumeMount,ComponentVersion.LambdaFunctionRecipeSource=LambdaFunctionRecipeSource,ComponentVersion.ComponentDependencyRequirement=ComponentDependencyRequirement,ComponentVersion.LambdaDeviceMount=LambdaDeviceMount,ComponentVersion.LambdaLinuxProcessParams=LambdaLinuxProcessParams,ComponentVersion.LambdaEventSource=LambdaEventSource,ComponentVersion.LambdaExecutionParameters=LambdaExecutionParameters;