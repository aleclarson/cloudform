import{ResourceBase,ResourceTag}from'../resource';import{Value,List}from'../dataTypes';export declare class MonthlyTransfer{GbPerMonthAllocated?:Value<string>;constructor(properties:MonthlyTransfer);}export declare class Port{FromPort?:Value<number>;ToPort?:Value<number>;Protocol?:Value<string>;AccessFrom?:Value<string>;AccessType?:Value<string>;CommonName?:Value<string>;AccessDirection?:Value<string>;Ipv6Cidrs?:List<Value<string>>;CidrListAliases?:List<Value<string>>;Cidrs?:List<Value<string>>;constructor(properties:Port);}export declare class AddOn{AddOnType:Value<string>;Status?:Value<string>;AutoSnapshotAddOnRequest?:AutoSnapshotAddOn;constructor(properties:AddOn);}export declare class AutoSnapshotAddOn{SnapshotTimeOfDay?:Value<string>;constructor(properties:AutoSnapshotAddOn);}export declare class Disk{DiskName:Value<string>;SizeInGb?:Value<string>;IsSystemDisk?:Value<boolean>;IOPS?:Value<number>;Path:Value<string>;AttachedTo?:Value<string>;AttachmentState?:Value<string>;constructor(properties:Disk);}export declare class Hardware{CpuCount?:Value<number>;RamSizeInGb?:Value<number>;Disks?:List<Disk>;constructor(properties:Hardware);}export declare class Location{AvailabilityZone?:Value<string>;RegionName?:Value<string>;constructor(properties:Location);}export declare class Networking{Ports:List<Port>;MonthlyTransfer?:MonthlyTransfer;constructor(properties:Networking);}export declare class State{Code?:Value<number>;Name?:Value<string>;constructor(properties:State);}export interface Properties{Hardware?:Hardware;Networking?:Networking;InstanceName:Value<string>;AvailabilityZone?:Value<string>;BundleId:Value<string>;BlueprintId:Value<string>;AddOns?:List<AddOn>;UserData?:Value<string>;KeyPairName?:Value<string>;Tags?:List<ResourceTag>;}declare class Instance extends ResourceBase<Properties>{static MonthlyTransfer:typeof MonthlyTransfer;static Port:typeof Port;static AddOn:typeof AddOn;static AutoSnapshotAddOn:typeof AutoSnapshotAddOn;static Disk:typeof Disk;static Hardware:typeof Hardware;static Location:typeof Location;static Networking:typeof Networking;static State:typeof State;constructor(properties:Properties);}export{Instance as R};