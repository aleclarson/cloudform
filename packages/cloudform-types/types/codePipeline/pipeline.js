"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.R=exports.ActionTypeId=exports.ArtifactStore=exports.StageDeclaration=exports.ActionDeclaration=exports.EncryptionKey=exports.ArtifactStoreMap=exports.BlockerDeclaration=exports.InputArtifact=exports.StageTransition=exports.OutputArtifact=void 0;const resource_1=require("../resource");class OutputArtifact{constructor(properties){Object.assign(this,properties)}}exports.OutputArtifact=OutputArtifact;class StageTransition{constructor(properties){Object.assign(this,properties)}}exports.StageTransition=StageTransition;class InputArtifact{constructor(properties){Object.assign(this,properties)}}exports.InputArtifact=InputArtifact;class BlockerDeclaration{constructor(properties){Object.assign(this,properties)}}exports.BlockerDeclaration=BlockerDeclaration;class ArtifactStoreMap{constructor(properties){Object.assign(this,properties)}}exports.ArtifactStoreMap=ArtifactStoreMap;class EncryptionKey{constructor(properties){Object.assign(this,properties)}}exports.EncryptionKey=EncryptionKey;class ActionDeclaration{constructor(properties){Object.assign(this,properties)}}exports.ActionDeclaration=ActionDeclaration;class StageDeclaration{constructor(properties){Object.assign(this,properties)}}exports.StageDeclaration=StageDeclaration;class ArtifactStore{constructor(properties){Object.assign(this,properties)}}exports.ArtifactStore=ArtifactStore;class ActionTypeId{constructor(properties){Object.assign(this,properties)}}exports.ActionTypeId=ActionTypeId;class Pipeline extends resource_1.ResourceBase{constructor(properties){super("AWS::CodePipeline::Pipeline",properties)}}(exports.R=Pipeline).OutputArtifact=OutputArtifact,Pipeline.StageTransition=StageTransition,Pipeline.InputArtifact=InputArtifact,Pipeline.BlockerDeclaration=BlockerDeclaration,Pipeline.ArtifactStoreMap=ArtifactStoreMap,Pipeline.EncryptionKey=EncryptionKey,Pipeline.ActionDeclaration=ActionDeclaration,Pipeline.StageDeclaration=StageDeclaration,Pipeline.ArtifactStore=ArtifactStore,Pipeline.ActionTypeId=ActionTypeId;