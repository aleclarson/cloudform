"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.R=exports.OpenMonitoring=exports.Tls=exports.ClientAuthentication=exports.Firehose=exports.EBSStorageInfo=exports.NodeExporter=exports.StorageInfo=exports.ConnectivityInfo=exports.JmxExporter=exports.Scram=exports.BrokerNodeGroupInfo=exports.ConfigurationInfo=exports.Sasl=exports.Iam=exports.EncryptionInfo=exports.ProvisionedThroughput=exports.LoggingInfo=exports.Prometheus=exports.EncryptionInTransit=exports.BrokerLogs=exports.Unauthenticated=exports.EncryptionAtRest=exports.PublicAccess=exports.CloudWatchLogs=exports.S3=void 0;const resource_1=require("../resource");class S3{constructor(properties){Object.assign(this,properties)}}exports.S3=S3;class CloudWatchLogs{constructor(properties){Object.assign(this,properties)}}exports.CloudWatchLogs=CloudWatchLogs;class PublicAccess{constructor(properties){Object.assign(this,properties)}}exports.PublicAccess=PublicAccess;class EncryptionAtRest{constructor(properties){Object.assign(this,properties)}}exports.EncryptionAtRest=EncryptionAtRest;class Unauthenticated{constructor(properties){Object.assign(this,properties)}}exports.Unauthenticated=Unauthenticated;class BrokerLogs{constructor(properties){Object.assign(this,properties)}}exports.BrokerLogs=BrokerLogs;class EncryptionInTransit{constructor(properties){Object.assign(this,properties)}}exports.EncryptionInTransit=EncryptionInTransit;class Prometheus{constructor(properties){Object.assign(this,properties)}}exports.Prometheus=Prometheus;class LoggingInfo{constructor(properties){Object.assign(this,properties)}}exports.LoggingInfo=LoggingInfo;class ProvisionedThroughput{constructor(properties){Object.assign(this,properties)}}exports.ProvisionedThroughput=ProvisionedThroughput;class EncryptionInfo{constructor(properties){Object.assign(this,properties)}}exports.EncryptionInfo=EncryptionInfo;class Iam{constructor(properties){Object.assign(this,properties)}}exports.Iam=Iam;class Sasl{constructor(properties){Object.assign(this,properties)}}exports.Sasl=Sasl;class ConfigurationInfo{constructor(properties){Object.assign(this,properties)}}exports.ConfigurationInfo=ConfigurationInfo;class BrokerNodeGroupInfo{constructor(properties){Object.assign(this,properties)}}exports.BrokerNodeGroupInfo=BrokerNodeGroupInfo;class Scram{constructor(properties){Object.assign(this,properties)}}exports.Scram=Scram;class JmxExporter{constructor(properties){Object.assign(this,properties)}}exports.JmxExporter=JmxExporter;class ConnectivityInfo{constructor(properties){Object.assign(this,properties)}}exports.ConnectivityInfo=ConnectivityInfo;class StorageInfo{constructor(properties){Object.assign(this,properties)}}exports.StorageInfo=StorageInfo;class NodeExporter{constructor(properties){Object.assign(this,properties)}}exports.NodeExporter=NodeExporter;class EBSStorageInfo{constructor(properties){Object.assign(this,properties)}}exports.EBSStorageInfo=EBSStorageInfo;class Firehose{constructor(properties){Object.assign(this,properties)}}exports.Firehose=Firehose;class ClientAuthentication{constructor(properties){Object.assign(this,properties)}}exports.ClientAuthentication=ClientAuthentication;class Tls{constructor(properties){Object.assign(this,properties)}}exports.Tls=Tls;class OpenMonitoring{constructor(properties){Object.assign(this,properties)}}exports.OpenMonitoring=OpenMonitoring;class Cluster extends resource_1.ResourceBase{constructor(properties){super("AWS::MSK::Cluster",properties)}}(exports.R=Cluster).S3=S3,Cluster.CloudWatchLogs=CloudWatchLogs,Cluster.PublicAccess=PublicAccess,Cluster.EncryptionAtRest=EncryptionAtRest,Cluster.Unauthenticated=Unauthenticated,Cluster.BrokerLogs=BrokerLogs,Cluster.EncryptionInTransit=EncryptionInTransit,Cluster.Prometheus=Prometheus,Cluster.LoggingInfo=LoggingInfo,Cluster.ProvisionedThroughput=ProvisionedThroughput,Cluster.EncryptionInfo=EncryptionInfo,Cluster.Iam=Iam,Cluster.Sasl=Sasl,Cluster.ConfigurationInfo=ConfigurationInfo,Cluster.BrokerNodeGroupInfo=BrokerNodeGroupInfo,Cluster.Scram=Scram,Cluster.JmxExporter=JmxExporter,Cluster.ConnectivityInfo=ConnectivityInfo,Cluster.StorageInfo=StorageInfo,Cluster.NodeExporter=NodeExporter,Cluster.EBSStorageInfo=EBSStorageInfo,Cluster.Firehose=Firehose,Cluster.ClientAuthentication=ClientAuthentication,Cluster.Tls=Tls,Cluster.OpenMonitoring=OpenMonitoring;