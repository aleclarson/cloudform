import{ResourceBase}from'../resource';import{Value,List}from'../dataTypes';export declare class S3{Enabled:Value<boolean>;Prefix?:Value<string>;Bucket?:Value<string>;constructor(properties:S3);}export declare class CloudWatchLogs{LogGroup?:Value<string>;Enabled:Value<boolean>;constructor(properties:CloudWatchLogs);}export declare class PublicAccess{Type?:Value<string>;constructor(properties:PublicAccess);}export declare class EncryptionAtRest{DataVolumeKMSKeyId:Value<string>;constructor(properties:EncryptionAtRest);}export declare class Unauthenticated{Enabled:Value<boolean>;constructor(properties:Unauthenticated);}export declare class BrokerLogs{S3?:S3;CloudWatchLogs?:CloudWatchLogs;Firehose?:Firehose;constructor(properties:BrokerLogs);}export declare class EncryptionInTransit{InCluster?:Value<boolean>;ClientBroker?:Value<string>;constructor(properties:EncryptionInTransit);}export declare class Prometheus{JmxExporter?:JmxExporter;NodeExporter?:NodeExporter;constructor(properties:Prometheus);}export declare class LoggingInfo{BrokerLogs:BrokerLogs;constructor(properties:LoggingInfo);}export declare class ProvisionedThroughput{Enabled?:Value<boolean>;VolumeThroughput?:Value<number>;constructor(properties:ProvisionedThroughput);}export declare class EncryptionInfo{EncryptionAtRest?:EncryptionAtRest;EncryptionInTransit?:EncryptionInTransit;constructor(properties:EncryptionInfo);}export declare class Iam{Enabled:Value<boolean>;constructor(properties:Iam);}export declare class Sasl{Scram?:Scram;Iam?:Iam;constructor(properties:Sasl);}export declare class ConfigurationInfo{Revision:Value<number>;Arn:Value<string>;constructor(properties:ConfigurationInfo);}export declare class BrokerNodeGroupInfo{StorageInfo?:StorageInfo;ConnectivityInfo?:ConnectivityInfo;SecurityGroups?:List<Value<string>>;BrokerAZDistribution?:Value<string>;ClientSubnets:List<Value<string>>;InstanceType:Value<string>;constructor(properties:BrokerNodeGroupInfo);}export declare class Scram{Enabled:Value<boolean>;constructor(properties:Scram);}export declare class JmxExporter{EnabledInBroker:Value<boolean>;constructor(properties:JmxExporter);}export declare class ConnectivityInfo{PublicAccess?:PublicAccess;constructor(properties:ConnectivityInfo);}export declare class StorageInfo{EBSStorageInfo?:EBSStorageInfo;constructor(properties:StorageInfo);}export declare class NodeExporter{EnabledInBroker:Value<boolean>;constructor(properties:NodeExporter);}export declare class EBSStorageInfo{VolumeSize?:Value<number>;ProvisionedThroughput?:ProvisionedThroughput;constructor(properties:EBSStorageInfo);}export declare class Firehose{Enabled:Value<boolean>;DeliveryStream?:Value<string>;constructor(properties:Firehose);}export declare class ClientAuthentication{Tls?:Tls;Sasl?:Sasl;Unauthenticated?:Unauthenticated;constructor(properties:ClientAuthentication);}export declare class Tls{CertificateAuthorityArnList?:List<Value<string>>;Enabled?:Value<boolean>;constructor(properties:Tls);}export declare class OpenMonitoring{Prometheus:Prometheus;constructor(properties:OpenMonitoring);}export interface Properties{BrokerNodeGroupInfo:BrokerNodeGroupInfo;EnhancedMonitoring?:Value<string>;KafkaVersion:Value<string>;NumberOfBrokerNodes:Value<number>;EncryptionInfo?:EncryptionInfo;OpenMonitoring?:OpenMonitoring;ClusterName:Value<string>;CurrentVersion?:Value<string>;ClientAuthentication?:ClientAuthentication;LoggingInfo?:LoggingInfo;Tags?:{[key:string]:Value<string>;};ConfigurationInfo?:ConfigurationInfo;}declare class Cluster extends ResourceBase<Properties>{static S3:typeof S3;static CloudWatchLogs:typeof CloudWatchLogs;static PublicAccess:typeof PublicAccess;static EncryptionAtRest:typeof EncryptionAtRest;static Unauthenticated:typeof Unauthenticated;static BrokerLogs:typeof BrokerLogs;static EncryptionInTransit:typeof EncryptionInTransit;static Prometheus:typeof Prometheus;static LoggingInfo:typeof LoggingInfo;static ProvisionedThroughput:typeof ProvisionedThroughput;static EncryptionInfo:typeof EncryptionInfo;static Iam:typeof Iam;static Sasl:typeof Sasl;static ConfigurationInfo:typeof ConfigurationInfo;static BrokerNodeGroupInfo:typeof BrokerNodeGroupInfo;static Scram:typeof Scram;static JmxExporter:typeof JmxExporter;static ConnectivityInfo:typeof ConnectivityInfo;static StorageInfo:typeof StorageInfo;static NodeExporter:typeof NodeExporter;static EBSStorageInfo:typeof EBSStorageInfo;static Firehose:typeof Firehose;static ClientAuthentication:typeof ClientAuthentication;static Tls:typeof Tls;static OpenMonitoring:typeof OpenMonitoring;constructor(properties:Properties);}export{Cluster as R};