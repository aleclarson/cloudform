"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const resource_1=require("../resource");class RelationalDatabaseConfig{constructor(properties){Object.assign(this,properties)}}exports.RelationalDatabaseConfig=RelationalDatabaseConfig;class LambdaConfig{constructor(properties){Object.assign(this,properties)}}exports.LambdaConfig=LambdaConfig;class HttpConfig{constructor(properties){Object.assign(this,properties)}}exports.HttpConfig=HttpConfig;class AwsIamConfig{constructor(properties){Object.assign(this,properties)}}exports.AwsIamConfig=AwsIamConfig;class DynamoDBConfig{constructor(properties){Object.assign(this,properties)}}exports.DynamoDBConfig=DynamoDBConfig;class AuthorizationConfig{constructor(properties){Object.assign(this,properties)}}exports.AuthorizationConfig=AuthorizationConfig;class RdsHttpEndpointConfig{constructor(properties){Object.assign(this,properties)}}exports.RdsHttpEndpointConfig=RdsHttpEndpointConfig;class ElasticsearchConfig{constructor(properties){Object.assign(this,properties)}}exports.ElasticsearchConfig=ElasticsearchConfig;class DeltaSyncConfig{constructor(properties){Object.assign(this,properties)}}exports.DeltaSyncConfig=DeltaSyncConfig;class DataSource extends resource_1.ResourceBase{constructor(properties){super("AWS::AppSync::DataSource",properties)}}(exports.default=DataSource).RelationalDatabaseConfig=RelationalDatabaseConfig,DataSource.LambdaConfig=LambdaConfig,DataSource.HttpConfig=HttpConfig,DataSource.AwsIamConfig=AwsIamConfig,DataSource.DynamoDBConfig=DynamoDBConfig,DataSource.AuthorizationConfig=AuthorizationConfig,DataSource.RdsHttpEndpointConfig=RdsHttpEndpointConfig,DataSource.ElasticsearchConfig=ElasticsearchConfig,DataSource.DeltaSyncConfig=DeltaSyncConfig,Object.defineProperty(exports,"__esModule",{value:!0});const resource_1=require("../resource");class SyncConfig{constructor(properties){Object.assign(this,properties)}}exports.SyncConfig=SyncConfig;class LambdaConflictHandlerConfig{constructor(properties){Object.assign(this,properties)}}exports.LambdaConflictHandlerConfig=LambdaConflictHandlerConfig;class FunctionConfiguration extends resource_1.ResourceBase{constructor(properties){super("AWS::AppSync::FunctionConfiguration",properties)}}(exports.default=FunctionConfiguration).SyncConfig=SyncConfig,FunctionConfiguration.LambdaConflictHandlerConfig=LambdaConflictHandlerConfig;