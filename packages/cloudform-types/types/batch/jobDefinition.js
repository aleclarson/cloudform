"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const resource_1=require("../resource");class Volumes{constructor(properties){Object.assign(this,properties)}}exports.Volumes=Volumes;class AuthorizationConfig{constructor(properties){Object.assign(this,properties)}}exports.AuthorizationConfig=AuthorizationConfig;class ResourceRequirement{constructor(properties){Object.assign(this,properties)}}exports.ResourceRequirement=ResourceRequirement;class Environment{constructor(properties){Object.assign(this,properties)}}exports.Environment=Environment;class VolumesHost{constructor(properties){Object.assign(this,properties)}}exports.VolumesHost=VolumesHost;class NodeProperties{constructor(properties){Object.assign(this,properties)}}exports.NodeProperties=NodeProperties;class RetryStrategy{constructor(properties){Object.assign(this,properties)}}exports.RetryStrategy=RetryStrategy;class Secret{constructor(properties){Object.assign(this,properties)}}exports.Secret=Secret;class NetworkConfiguration{constructor(properties){Object.assign(this,properties)}}exports.NetworkConfiguration=NetworkConfiguration;class LogConfiguration{constructor(properties){Object.assign(this,properties)}}exports.LogConfiguration=LogConfiguration;class ContainerProperties{constructor(properties){Object.assign(this,properties)}}exports.ContainerProperties=ContainerProperties;class MountPoints{constructor(properties){Object.assign(this,properties)}}exports.MountPoints=MountPoints;class EvaluateOnExit{constructor(properties){Object.assign(this,properties)}}exports.EvaluateOnExit=EvaluateOnExit;class Ulimit{constructor(properties){Object.assign(this,properties)}}exports.Ulimit=Ulimit;class LinuxParameters{constructor(properties){Object.assign(this,properties)}}exports.LinuxParameters=LinuxParameters;class FargatePlatformConfiguration{constructor(properties){Object.assign(this,properties)}}exports.FargatePlatformConfiguration=FargatePlatformConfiguration;class Timeout{constructor(properties){Object.assign(this,properties)}}exports.Timeout=Timeout;class Tmpfs{constructor(properties){Object.assign(this,properties)}}exports.Tmpfs=Tmpfs;class NodeRangeProperty{constructor(properties){Object.assign(this,properties)}}exports.NodeRangeProperty=NodeRangeProperty;class EfsVolumeConfiguration{constructor(properties){Object.assign(this,properties)}}exports.EfsVolumeConfiguration=EfsVolumeConfiguration;class Device{constructor(properties){Object.assign(this,properties)}}exports.Device=Device;class JobDefinition extends resource_1.ResourceBase{constructor(properties){super("AWS::Batch::JobDefinition",properties)}}(exports.default=JobDefinition).Volumes=Volumes,JobDefinition.AuthorizationConfig=AuthorizationConfig,JobDefinition.ResourceRequirement=ResourceRequirement,JobDefinition.Environment=Environment,JobDefinition.VolumesHost=VolumesHost,JobDefinition.NodeProperties=NodeProperties,JobDefinition.RetryStrategy=RetryStrategy,JobDefinition.Secret=Secret,JobDefinition.NetworkConfiguration=NetworkConfiguration,JobDefinition.LogConfiguration=LogConfiguration,JobDefinition.ContainerProperties=ContainerProperties,JobDefinition.MountPoints=MountPoints,JobDefinition.EvaluateOnExit=EvaluateOnExit,JobDefinition.Ulimit=Ulimit,JobDefinition.LinuxParameters=LinuxParameters,JobDefinition.FargatePlatformConfiguration=FargatePlatformConfiguration,JobDefinition.Timeout=Timeout,JobDefinition.Tmpfs=Tmpfs,JobDefinition.NodeRangeProperty=NodeRangeProperty,JobDefinition.EfsVolumeConfiguration=EfsVolumeConfiguration,JobDefinition.Device=Device,Object.defineProperty(exports,"__esModule",{value:!0});const resource_1=require("../resource");class ComputeEnvironmentOrder{constructor(properties){Object.assign(this,properties)}}exports.ComputeEnvironmentOrder=ComputeEnvironmentOrder;class JobQueue extends resource_1.ResourceBase{constructor(properties){super("AWS::Batch::JobQueue",properties)}}(exports.default=JobQueue).ComputeEnvironmentOrder=ComputeEnvironmentOrder;