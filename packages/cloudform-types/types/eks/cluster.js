"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.R=exports.ResourcesVpcConfig=exports.LoggingTypeConfig=exports.Logging=exports.KubernetesNetworkConfig=exports.EncryptionConfig=exports.ClusterLogging=exports.Provider=void 0;const resource_1=require("../resource");class Provider{constructor(properties){Object.assign(this,properties)}}exports.Provider=Provider;class ClusterLogging{constructor(properties){Object.assign(this,properties)}}exports.ClusterLogging=ClusterLogging;class EncryptionConfig{constructor(properties){Object.assign(this,properties)}}exports.EncryptionConfig=EncryptionConfig;class KubernetesNetworkConfig{constructor(properties){Object.assign(this,properties)}}exports.KubernetesNetworkConfig=KubernetesNetworkConfig;class Logging{constructor(properties){Object.assign(this,properties)}}exports.Logging=Logging;class LoggingTypeConfig{constructor(properties){Object.assign(this,properties)}}exports.LoggingTypeConfig=LoggingTypeConfig;class ResourcesVpcConfig{constructor(properties){Object.assign(this,properties)}}exports.ResourcesVpcConfig=ResourcesVpcConfig;class Cluster extends resource_1.ResourceBase{constructor(properties){super("AWS::EKS::Cluster",properties)}}(exports.R=Cluster).Provider=Provider,Cluster.ClusterLogging=ClusterLogging,Cluster.EncryptionConfig=EncryptionConfig,Cluster.KubernetesNetworkConfig=KubernetesNetworkConfig,Cluster.Logging=Logging,Cluster.LoggingTypeConfig=LoggingTypeConfig,Cluster.ResourcesVpcConfig=ResourcesVpcConfig;