import{ResourceBase,ResourceTag}from'../resource';import{Value,List}from'../dataTypes';export declare class Provider{KeyArn?:Value<string>;constructor(properties:Provider);}export declare class ClusterLogging{EnabledTypes?:List<LoggingTypeConfig>;constructor(properties:ClusterLogging);}export declare class EncryptionConfig{Provider?:Provider;Resources?:List<Value<string>>;constructor(properties:EncryptionConfig);}export declare class KubernetesNetworkConfig{ServiceIpv4Cidr?:Value<string>;ServiceIpv6Cidr?:Value<string>;IpFamily?:Value<string>;constructor(properties:KubernetesNetworkConfig);}export declare class Logging{ClusterLogging?:ClusterLogging;constructor(properties:Logging);}export declare class LoggingTypeConfig{Type?:Value<string>;constructor(properties:LoggingTypeConfig);}export declare class ResourcesVpcConfig{EndpointPrivateAccess?:Value<boolean>;EndpointPublicAccess?:Value<boolean>;PublicAccessCidrs?:List<Value<string>>;SecurityGroupIds?:List<Value<string>>;SubnetIds:List<Value<string>>;constructor(properties:ResourcesVpcConfig);}export interface Properties{EncryptionConfig?:List<EncryptionConfig>;KubernetesNetworkConfig?:KubernetesNetworkConfig;Logging?:Logging;Name?:Value<string>;ResourcesVpcConfig:ResourcesVpcConfig;RoleArn:Value<string>;Version?:Value<string>;Tags?:List<ResourceTag>;}declare class Cluster extends ResourceBase<Properties>{static Provider:typeof Provider;static ClusterLogging:typeof ClusterLogging;static EncryptionConfig:typeof EncryptionConfig;static KubernetesNetworkConfig:typeof KubernetesNetworkConfig;static Logging:typeof Logging;static LoggingTypeConfig:typeof LoggingTypeConfig;static ResourcesVpcConfig:typeof ResourcesVpcConfig;constructor(properties:Properties);}export{Cluster as R};