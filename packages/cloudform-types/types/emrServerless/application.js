"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.R=exports.AutoStopConfiguration=exports.InitialCapacityConfig=exports.WorkerConfiguration=exports.AutoStartConfiguration=exports.MaximumAllowedResources=exports.NetworkConfiguration=exports.InitialCapacityConfigKeyValuePair=void 0;const resource_1=require("../resource");class InitialCapacityConfigKeyValuePair{constructor(properties){Object.assign(this,properties)}}exports.InitialCapacityConfigKeyValuePair=InitialCapacityConfigKeyValuePair;class NetworkConfiguration{constructor(properties){Object.assign(this,properties)}}exports.NetworkConfiguration=NetworkConfiguration;class MaximumAllowedResources{constructor(properties){Object.assign(this,properties)}}exports.MaximumAllowedResources=MaximumAllowedResources;class AutoStartConfiguration{constructor(properties){Object.assign(this,properties)}}exports.AutoStartConfiguration=AutoStartConfiguration;class WorkerConfiguration{constructor(properties){Object.assign(this,properties)}}exports.WorkerConfiguration=WorkerConfiguration;class InitialCapacityConfig{constructor(properties){Object.assign(this,properties)}}exports.InitialCapacityConfig=InitialCapacityConfig;class AutoStopConfiguration{constructor(properties){Object.assign(this,properties)}}exports.AutoStopConfiguration=AutoStopConfiguration;class Application extends resource_1.ResourceBase{constructor(properties){super("AWS::EMRServerless::Application",properties)}}(exports.R=Application).InitialCapacityConfigKeyValuePair=InitialCapacityConfigKeyValuePair,Application.NetworkConfiguration=NetworkConfiguration,Application.MaximumAllowedResources=MaximumAllowedResources,Application.AutoStartConfiguration=AutoStartConfiguration,Application.WorkerConfiguration=WorkerConfiguration,Application.InitialCapacityConfig=InitialCapacityConfig,Application.AutoStopConfiguration=AutoStopConfiguration;