"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const resource_1=require("../resource");class CSVMappingParameters{constructor(properties){Object.assign(this,properties)}}exports.CSVMappingParameters=CSVMappingParameters;class Input{constructor(properties){Object.assign(this,properties)}}exports.Input=Input;class JSONMappingParameters{constructor(properties){Object.assign(this,properties)}}exports.JSONMappingParameters=JSONMappingParameters;class KinesisStreamsInput{constructor(properties){Object.assign(this,properties)}}exports.KinesisStreamsInput=KinesisStreamsInput;class RecordColumn{constructor(properties){Object.assign(this,properties)}}exports.RecordColumn=RecordColumn;class KinesisFirehoseInput{constructor(properties){Object.assign(this,properties)}}exports.KinesisFirehoseInput=KinesisFirehoseInput;class InputParallelism{constructor(properties){Object.assign(this,properties)}}exports.InputParallelism=InputParallelism;class InputSchema{constructor(properties){Object.assign(this,properties)}}exports.InputSchema=InputSchema;class MappingParameters{constructor(properties){Object.assign(this,properties)}}exports.MappingParameters=MappingParameters;class RecordFormat{constructor(properties){Object.assign(this,properties)}}exports.RecordFormat=RecordFormat;class InputProcessingConfiguration{constructor(properties){Object.assign(this,properties)}}exports.InputProcessingConfiguration=InputProcessingConfiguration;class InputLambdaProcessor{constructor(properties){Object.assign(this,properties)}}exports.InputLambdaProcessor=InputLambdaProcessor;class Application extends resource_1.ResourceBase{constructor(properties){super("AWS::KinesisAnalytics::Application",properties)}}(exports.default=Application).CSVMappingParameters=CSVMappingParameters,Application.Input=Input,Application.JSONMappingParameters=JSONMappingParameters,Application.KinesisStreamsInput=KinesisStreamsInput,Application.RecordColumn=RecordColumn,Application.KinesisFirehoseInput=KinesisFirehoseInput,Application.InputParallelism=InputParallelism,Application.InputSchema=InputSchema,Application.MappingParameters=MappingParameters,Application.RecordFormat=RecordFormat,Application.InputProcessingConfiguration=InputProcessingConfiguration,Application.InputLambdaProcessor=InputLambdaProcessor,Object.defineProperty(exports,"__esModule",{value:!0});const resource_1=require("../resource");class KinesisFirehoseOutput{constructor(properties){Object.assign(this,properties)}}exports.KinesisFirehoseOutput=KinesisFirehoseOutput;class KinesisStreamsOutput{constructor(properties){Object.assign(this,properties)}}exports.KinesisStreamsOutput=KinesisStreamsOutput;class LambdaOutput{constructor(properties){Object.assign(this,properties)}}exports.LambdaOutput=LambdaOutput;class Output{constructor(properties){Object.assign(this,properties)}}exports.Output=Output;class DestinationSchema{constructor(properties){Object.assign(this,properties)}}exports.DestinationSchema=DestinationSchema;class ApplicationOutput extends resource_1.ResourceBase{constructor(properties){super("AWS::KinesisAnalytics::ApplicationOutput",properties)}}(exports.default=ApplicationOutput).KinesisFirehoseOutput=KinesisFirehoseOutput,ApplicationOutput.KinesisStreamsOutput=KinesisStreamsOutput,ApplicationOutput.LambdaOutput=LambdaOutput,ApplicationOutput.Output=Output,ApplicationOutput.DestinationSchema=DestinationSchema;