import*as _0 from'./applicationOutput';import*as _1 from'./application';import*as _2 from'./applicationReferenceDataSource';export declare namespace KinesisAnalytics{const ApplicationOutput:typeof _0.R;const Application:typeof _1.R;const ApplicationReferenceDataSource:typeof _2.R;type ApplicationOutput=_0.R;type Application=_1.R;type ApplicationReferenceDataSource=_2.R;namespace ApplicationOutput{type KinesisFirehoseOutput=_0.KinesisFirehoseOutput;type KinesisStreamsOutput=_0.KinesisStreamsOutput;type LambdaOutput=_0.LambdaOutput;type Output=_0.Output;type DestinationSchema=_0.DestinationSchema;}namespace Application{type CSVMappingParameters=_1.CSVMappingParameters;type Input=_1.Input;type JSONMappingParameters=_1.JSONMappingParameters;type KinesisStreamsInput=_1.KinesisStreamsInput;type RecordColumn=_1.RecordColumn;type KinesisFirehoseInput=_1.KinesisFirehoseInput;type InputParallelism=_1.InputParallelism;type InputSchema=_1.InputSchema;type MappingParameters=_1.MappingParameters;type RecordFormat=_1.RecordFormat;type InputProcessingConfiguration=_1.InputProcessingConfiguration;type InputLambdaProcessor=_1.InputLambdaProcessor;}namespace ApplicationReferenceDataSource{type RecordFormat=_2.RecordFormat;type CSVMappingParameters=_2.CSVMappingParameters;type S3ReferenceDataSource=_2.S3ReferenceDataSource;type RecordColumn=_2.RecordColumn;type ReferenceSchema=_2.ReferenceSchema;type MappingParameters=_2.MappingParameters;type JSONMappingParameters=_2.JSONMappingParameters;type ReferenceDataSource=_2.ReferenceDataSource;}}